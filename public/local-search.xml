<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>iview踩坑</title>
    <link href="/blog/2022/02/26/iview%E8%B8%A9%E5%9D%91/"/>
    <url>/blog/2022/02/26/iview%E8%B8%A9%E5%9D%91/</url>
    
    <content type="html"><![CDATA[<h3 id="这里记录的都是一些在使用Iview的坑-主要是vue2"><a href="#这里记录的都是一些在使用Iview的坑-主要是vue2" class="headerlink" title="这里记录的都是一些在使用Iview的坑,主要是vue2"></a>这里记录的都是一些在使用Iview的坑,主要是vue2</h3><h3 id="1-Table中遇到的坑"><a href="#1-Table中遇到的坑" class="headerlink" title="1.Table中遇到的坑"></a>1.Table中遇到的坑</h3><p>使用Table，并且配置了操作栏。<br><img src="https://qiniu.zhaoxinchuan.cn/iview/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20220226222614.png" alt="table-action配置"><br>如果使用了fixed属性,在自定义组件中,打印初始化情况,会打印两次!<br><img src="https://qiniu.zhaoxinchuan.cn/iview/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20220226222637.png" alt="fixed"><br><img src="https://qiniu.zhaoxinchuan.cn/iview/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20220226222649.png" alt="console结果"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vue全局使用scss变量</title>
    <link href="/blog/2022/02/24/vue%E5%85%A8%E5%B1%80scss/"/>
    <url>/blog/2022/02/24/vue%E5%85%A8%E5%B1%80scss/</url>
    
    <content type="html"><![CDATA[<p>在vue中经常会遇到修改页面统一颜色的需求<br>在scss中，我们可以定义一个颜色变量，在每个要使用该颜色的地方，引入这个scss文件，使用里面的颜色变量。但每个地方都去引入过于繁琐，所以sass-loader给我们提供了一种全局引入的方式。<br><a href="https://github.com/webpack-contrib/sass-loader">sass-loader文档地址</a></p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">&#123;<br>    css: &#123;<br>        loaderOptions: &#123;<br>         scss: &#123;<br>                <span class="hljs-comment">//  这里的名称根据不同的版本，名称不同</span><br>                <span class="hljs-comment">// 下方有说明</span><br>                additionalData: <span class="hljs-string">`@import &quot;@/assets/scss/_variable&quot;;`</span><br>        &#125;<span class="hljs-string">``</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="配置中常见的错误"><a href="#配置中常见的错误" class="headerlink" title="配置中常见的错误"></a>配置中常见的错误</h3><h4 id="1-Module-build-failed"><a href="#1-Module-build-failed" class="headerlink" title="1.Module build failed"></a>1.Module build failed</h4><p> (from ./node_modules/sass-loader/dist/cjs.js):<br>ValidationError: Invalid options object. Sass Loader has been initialized using an options object that does not match the API schema.- options has an unknown property ‘prependData’. These properties are valid:</p><p>模块生成失败(from ./node_modules/sass-loader/dist/cjs.js):<br>ValidationError:无效的选项对象。已使用与API架构不匹配的选项对象初始化Sass加载程序。<br>-选项具有未知属性“prependData”。这些属性是有效的</p><p>解决方法：<br>这是因为sass-loader的版本不同，导致Api的名称不同。所以，要解决这个方法，首先我们要先去查看sass-loader的文档。</p><table><thead><tr><th>版本号</th><th>Api名称</th></tr></thead><tbody><tr><td>v8-</td><td>“data”</td></tr><tr><td>v8</td><td>“prependData”</td></tr><tr><td>v10+</td><td>“additionalData”</td></tr></tbody></table><h4 id="2-SassError-media-query-expression-must-begin-with-‘-‘"><a href="#2-SassError-media-query-expression-must-begin-with-‘-‘" class="headerlink" title="2.SassError: media query expression must begin with ‘(‘"></a>2.SassError: media query expression must begin with ‘(‘</h4><p>如果配置了全局scss后，出现这个错误提示。不要慌，一猜就知道可能是刚刚的配置出现了问题。<br>可能是下面这段引入没有写分号，导致编译错误           </p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">&#123;<br>    css: &#123;<br>        loaderOptions: &#123;<br>         scss: &#123;<br>                additionalData: <span class="hljs-string">`@import &quot;@/assets/scss/_variable&quot;`</span><span class="hljs-comment">// 这里结尾因该以分号   </span><br>                 additionalData: <span class="hljs-string">`@import &quot;@/assets/scss/_variable&quot;;`</span><span class="hljs-comment">// 正确写法      </span><br>        &#125;<span class="hljs-string">``</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>TypeScript</title>
    <link href="/blog/2022/02/24/TypeScript/"/>
    <url>/blog/2022/02/24/TypeScript/</url>
    
    <content type="html"><![CDATA[<h3 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h3><p>TypeScript 是 JavaScript<strong>类型</strong>的超集</p><p>优点：<br>TypeScript 可以在任何浏览器，任何计算机和任何操作系统上运行(多平台使用)</p><h3 id="1-安装-TypeScript"><a href="#1-安装-TypeScript" class="headerlink" title="1.安装 TypeScript"></a>1.安装 TypeScript</h3><figure class="highlight cmake"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> -g typesctipt<br></code></pre></div></td></tr></table></figure><h3 id="2-创建-ts-typescript-文件的扩展名-文件"><a href="#2-创建-ts-typescript-文件的扩展名-文件" class="headerlink" title="2.创建.ts(typescript 文件的扩展名)文件"></a>2.创建.ts(typescript 文件的扩展名)文件</h3><figure class="highlight typescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs TypeScript"><span class="hljs-comment">// demo.ts</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getName</span>(<span class="hljs-params">name:<span class="hljs-built_in">string</span></span>):<span class="hljs-title">string</span></span>&#123;<br><span class="hljs-keyword">return</span> name;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><p>上面的代码和我们平时写的 JavaScript 代码看起来是不是有那么一点不一样？没错，多了一些我们平时在一些强类型语言中才看到的-类型定义。</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Java"><span class="hljs-comment">// java</span><br><span class="hljs-keyword">int</span> num = <span class="hljs-number">12</span>;<br></code></pre></div></td></tr></table></figure><p>这就是 TypeScript 中重要的特点-类型注解</p><h3 id="3-TypeScript-高级功能"><a href="#3-TypeScript-高级功能" class="headerlink" title="3.TypeScript 高级功能"></a>3.TypeScript 高级功能</h3><h4 id="3-1-类型注解"><a href="#3-1-类型注解" class="headerlink" title="3.1 类型注解"></a>3.1 类型注解</h4><p>在 JavaScript 语言中包含两种数据类型<br>1.基本数据类型<br>Number<br>String<br>Boolean<br>undefined<br>Null<br>BigInt<br>Symbel<br>2.引用数据类型<br>Object<br>Array<br>Function<br>Date<br>RegExp</p><p>那么怎么使用 TypeScript 去定义这些类型呢？</p><h5 id="3-1-1-基本数据类型-类型注解"><a href="#3-1-1-基本数据类型-类型注解" class="headerlink" title="3.1.1 基本数据类型-类型注解"></a>3.1.1 基本数据类型-类型注解</h5><h6 id="number-类型"><a href="#number-类型" class="headerlink" title="number 类型"></a>number 类型</h6><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript"><span class="hljs-comment">// number类型</span><br><span class="hljs-keyword">let</span> num:number = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">let</span> num1:number = <span class="hljs-number">0xf11d</span>;<br><span class="hljs-keyword">let</span> num2:number = <span class="hljs-number">0b1011</span>;<br><span class="hljs-keyword">let</span> num3:number = <span class="hljs-number">0o747</span>;<br><span class="hljs-comment">// 和JavaScript一样，TypeScript中的所有数字都是浮点数，支持十、十六、二、八进制</span><br></code></pre></div></td></tr></table></figure><p>要给一个变量定义它的类型，我们只需要在变量名的后面加<strong>冒号</strong>和声明的数据类型就可以了<br>如果我们修改 num 这个变量，并且将修改的值设为不是 number 类型的会怎么样？</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript">num = <span class="hljs-string">&quot;123&quot;</span>;<br><span class="hljs-comment">// 在编辑器中，num这个变量名下方会有一个注意标示(红色波浪线)，并且将光标移动到变量名，提示框中会给我们说明这个错误的原因。</span><br><span class="hljs-comment">// 比如上方修改 num = &quot;123&quot;</span><br><span class="hljs-comment">// 提示框显示：不能将类型“string”分配给类型“number”</span><br><span class="hljs-comment">// 因为在声明变量num的时候，我们已经将它的类型定义为 number类型，如果修改变量值，那么只能将这个变量设置为 number类型的值</span><br>num = <span class="hljs-number">123</span>;<br></code></pre></div></td></tr></table></figure><h5 id="string-类型"><a href="#string-类型" class="headerlink" title="string 类型"></a>string 类型</h5><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript"><span class="hljs-comment">// string类型</span><br><span class="hljs-keyword">let</span> str1:string = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">let</span> str2:string = <span class="hljs-string">&quot;这是一段字符串&quot;</span>;<br><span class="hljs-keyword">let</span> str3:string = <span class="hljs-string">`模板字符串，<span class="hljs-subst">$&#123;str2&#125;</span>`</span>;<br></code></pre></div></td></tr></table></figure><h5 id="boolean-类型"><a href="#boolean-类型" class="headerlink" title="boolean 类型"></a>boolean 类型</h5><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript"><span class="hljs-comment">// boolean类型</span><br><span class="hljs-keyword">let</span> bool:boolean = <span class="hljs-literal">true</span>;<br></code></pre></div></td></tr></table></figure><h5 id="undefined-类型"><a href="#undefined-类型" class="headerlink" title="undefined 类型"></a>undefined 类型</h5><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript"><span class="hljs-comment">// undefined类型</span><br><span class="hljs-keyword">let</span> <span class="hljs-literal">undefined</span>:<span class="hljs-literal">undefined</span> = <span class="hljs-literal">undefined</span>;<br><span class="hljs-comment">// undefined是指在变量声明时，没有给变量进行赋值。那么这个值就是undefined</span><br><span class="hljs-keyword">let</span> temp:<span class="hljs-literal">undefined</span>;<br><span class="hljs-built_in">console</span>.log(temp);<br><span class="hljs-comment">// undefined</span><br></code></pre></div></td></tr></table></figure><h5 id="null-类型"><a href="#null-类型" class="headerlink" title="null 类型"></a>null 类型</h5><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript"><span class="hljs-comment">// null类型</span><br><span class="hljs-keyword">let</span> bool:<span class="hljs-literal">null</span> = <span class="hljs-literal">null</span>;<br></code></pre></div></td></tr></table></figure><h4 id="3-1-2-引用数据类型"><a href="#3-1-2-引用数据类型" class="headerlink" title="3.1.2 引用数据类型"></a>3.1.2 引用数据类型</h4><h5 id="Array-类型"><a href="#Array-类型" class="headerlink" title="Array 类型"></a>Array 类型</h5><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript"><span class="hljs-comment">// 定义一个内部数据为number的数组</span><br><span class="hljs-keyword">let</span> arr1:number[] = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>];<br><span class="hljs-comment">// 或者使用-泛型(泛型的定义在后面部分)</span><br><span class="hljs-keyword">let</span> arr2:<span class="hljs-built_in">Array</span>&lt;number&gt; = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>];<br><span class="hljs-comment">// 定义一个包含多种类型的数组,注意值的位置和类型的位置一致</span><br><span class="hljs-keyword">let</span> arr3:[number,string,boolean] = [<span class="hljs-number">1</span>,<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-literal">true</span>];<br></code></pre></div></td></tr></table></figure><h4 id="3-2-接口-interface"><a href="#3-2-接口-interface" class="headerlink" title="3.2 接口-interface"></a>3.2 接口-interface</h4><h5 id="3-2-1-接口的定义"><a href="#3-2-1-接口的定义" class="headerlink" title="3.2.1 接口的定义"></a>3.2.1 接口的定义</h5><p>1.关键字 interface<br><br></p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript">interface 名称 &#123;<br><span class="hljs-comment">//需要定义的数据</span><br>&#125;;<br></code></pre></div></td></tr></table></figure><h5 id="Object-类型"><a href="#Object-类型" class="headerlink" title="Object 类型"></a>Object 类型</h5><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript"><span class="hljs-comment">// 在定义Object类型的时候，里面会有很多的数据类型，所以就有了interface来帮我们检测这个数据是否符合我们的要求</span><br><span class="hljs-keyword">const</span> user = &#123;<br>id:<span class="hljs-number">1</span>,<br>name:<span class="hljs-string">&quot;小明&quot;</span>,<br>age:<span class="hljs-number">18</span>,<br>height: <span class="hljs-number">170</span><br>&#125;;<br></code></pre></div></td></tr></table></figure><p>我们在看到上面这个 user 对象的时候，第一眼就确定了里面数据的类型，name 是一个字符串(string),age 是一个数字(number),但当这个数据是后台返回的，我们并不确定这个数据是否是我们想要的类型，或者我们编码的时候写错了类型，将 age 写成 string 类型了，如果代码量过大，就会给维护造成时间成本，所以接口(interface)就是来帮我们检测这个数据是否符合我们的预期值。</p><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript">interface IUser &#123;<br>readonly <span class="hljs-built_in">id</span>:<span class="hljs-built_in">number</span>,<br><span class="hljs-built_in">name</span>: <span class="hljs-built_in">string</span>,<br>age: <span class="hljs-built_in">number</span>,<br>weight?: <span class="hljs-built_in">number</span><br>&#125;;<br></code></pre></div></td></tr></table></figure><p>上方的接口我们就定义好了，其中<br><br><br><strong>readonly</strong>表示这个属性只能读取，不能修改。这个属性有点类似于 ES6 中的 const。<br><br><br>属性名后面的<strong>问号(?)</strong>-可选参数、可选属性，表示这个属性是可选的，在使用的时候，可以不写这个属性。</p><p>接口的使用：</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript">interface IUser &#123;<br>readonly id:number,<br>name: string,<br>age: number,<br>weight?: number<br>&#125;;<br><span class="hljs-keyword">let</span> user:IUser = &#123;<br>id:<span class="hljs-number">2</span>，<br>name:<span class="hljs-string">&quot;小红&quot;</span>,<br>age:<span class="hljs-number">16</span><br>&#125;;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>nodejs</title>
    <link href="/blog/2021/10/25/nodejs/"/>
    <url>/blog/2021/10/25/nodejs/</url>
    
    <content type="html"><![CDATA[<blockquote><p>我们使用nodejs开发服务端并部署到服务器时，会在服务器中安装nodejs应用，windows基于可视化操作安装(不过多赘述)。现在主要是基于linux的centos服务器安装nodejs。</p></blockquote><h3 id="1-安装nodejs依赖"><a href="#1-安装nodejs依赖" class="headerlink" title="1.安装nodejs依赖"></a>1.安装nodejs依赖</h3><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs code">yum install gcc gcc-c++<br>&lt;!-- 这里使用centos的yum命令 --&gt;<br></code></pre></div></td></tr></table></figure><h3 id="2-下载nodejs压缩包"><a href="#2-下载nodejs压缩包" class="headerlink" title="2.下载nodejs压缩包"></a>2.下载nodejs压缩包</h3><p><a href="https://nodejs.org/en/download/">下载地址</a></p><h4 id="在服务器根目录或者自定义位置新建node文件夹，方便我们把压缩包下载到当前位置，"><a href="#在服务器根目录或者自定义位置新建node文件夹，方便我们把压缩包下载到当前位置，" class="headerlink" title="在服务器根目录或者自定义位置新建node文件夹，方便我们把压缩包下载到当前位置，"></a>在服务器根目录或者自定义位置新建node文件夹，方便我们把压缩包下载到当前位置，</h4><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">mkdir</span> nodejs<br><span class="hljs-attribute">cd</span> nodejs<br><span class="hljs-attribute">wget</span> https://nodejs.org/dist/v<span class="hljs-number">14</span>.<span class="hljs-number">18</span>.<span class="hljs-number">1</span>/node-v<span class="hljs-number">14</span>.<span class="hljs-number">18</span>.<span class="hljs-number">1</span>.tar.gz<br></code></pre></div></td></tr></table></figure><p><img src="https://qiniu.zhaoxinchuan.cn/node/1.png" alt="下载安装包"></p><h3 id="3-解压下载的安装包"><a href="#3-解压下载的安装包" class="headerlink" title="3.解压下载的安装包"></a>3.解压下载的安装包</h3><figure class="highlight crmsh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs crmsh">tar -xvf <span class="hljs-keyword">node</span><span class="hljs-title">-v14</span>.<span class="hljs-number">18.1</span>.tar.gz<br>mv <span class="hljs-keyword">node</span><span class="hljs-title">-v14</span>.<span class="hljs-number">18.1</span> <span class="hljs-keyword">node</span><span class="hljs-title"></span><br></code></pre></div></td></tr></table></figure><p><img src="https://qiniu.zhaoxinchuan.cn/node/2.png" alt="解压安装包"><br><img src="https://qiniu.zhaoxinchuan.cn/node/3.png" alt="解压后的文件"></p><h3 id="4-将node添加到环境变量中"><a href="#4-将node添加到环境变量中" class="headerlink" title="4.将node添加到环境变量中"></a>4.将node添加到环境变量中</h3><p>找到/etv/profile</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">vim /etc/profile <span class="hljs-comment">//编辑</span><br><span class="hljs-comment">// 在文本中添加</span><br><span class="hljs-keyword">export</span> NODE_HOME=<span class="hljs-regexp">/nodejs/</span>node-v14<span class="hljs-number">.18</span><span class="hljs-number">.1</span>  <span class="hljs-comment">// 刚刚解压的文件路径</span><br><span class="hljs-keyword">export</span> PATH=$NODE_HOME/bin:$PATH<br></code></pre></div></td></tr></table></figure><p><img src="https://qiniu.zhaoxinchuan.cn/node/4.png" alt="解压后的文件"></p><h3 id="5-查看node-npm版本"><a href="#5-查看node-npm版本" class="headerlink" title="5.查看node,npm版本"></a>5.查看node,npm版本</h3><p><img src="https://qiniu.zhaoxinchuan.cn/node/5.png" alt="解压后的文件"></p>]]></content>
    
    
    <categories>
      
      <category>Node</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
      <tag>centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>grayscale.js</title>
    <link href="/blog/2021/09/27/grayscale/"/>
    <url>/blog/2021/09/27/grayscale/</url>
    
    <content type="html"><![CDATA[<blockquote><p>我们经常会在一些网站中看到这样的效果,比如经常使用的B站,当某一个人逝世或者全国哀悼日的时候,会将网站所有模块置灰以示哀悼！</p></blockquote><p><img src="https://qiniu.zhaoxinchuan.cn/grayscale/1.webp" alt="示意图"></p><blockquote><p>我们可以定义一个class类名,当到达某一个时间的时候,给某一个元素添加这个class类名以达到效果,但是这样也会产生一些问题,比如某个元素是定位到一个位置的,就会使效果达不到我们的需求,一个一个元素去<br>修改过于繁琐。所以就可以使用 <font color=red>grayscale.js</font> 这个库来进行修改<br><a href="https://j11y.io/javascript/grayscaling-in-non-ie-browsers/">grayscale.js文档</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-comment">// 引入文件</span><br>&lt;script src=<span class="hljs-string">&quot;https://j11y.io/demos/grayscale/grayscale.js&quot;</span>&gt;&lt;script&gt;<br>&lt;script&gt;<br><span class="hljs-comment">// 方法调用</span><br>grayscale(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;main&quot;</span>));<br>&lt;/script&gt;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
      <tag>插件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>react+egg.js搭建博客系统</title>
    <link href="/blog/2021/08/04/react-blog/"/>
    <url>/blog/2021/08/04/react-blog/</url>
    
    <content type="html"><![CDATA[<h1 id="技术栈："><a href="#技术栈：" class="headerlink" title="技术栈："></a>技术栈：</h1><h2 id="1-开发环境搭建"><a href="#1-开发环境搭建" class="headerlink" title="1 开发环境搭建"></a>1 开发环境搭建</h2><h3 id="1-1-全局安装-create-next-app"><a href="#1-1-全局安装-create-next-app" class="headerlink" title="1.1 全局安装 create-next-app"></a>1.1 全局安装 create-next-app</h3><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">npm i create-next-app -g<br>or <br>yarn <span class="hljs-built_in">global</span> add create-next-app<br></code></pre></div></td></tr></table></figure><h3 id="1-2-生成脚手架"><a href="#1-2-生成脚手架" class="headerlink" title="1.2 生成脚手架"></a>1.2 生成脚手架</h3> <figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">npx create-next-app myapp<br>or <br>yarn create next-app myapp<br></code></pre></div></td></tr></table></figure><h2 id="2-搭建博客首页"><a href="#2-搭建博客首页" class="headerlink" title="2 搭建博客首页"></a>2 搭建博客首页</h2><p>进入工程目录，删除默认的文件和代码，把首页改为下面的代码</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> Head <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;next/head&#x27;</span><br><span class="hljs-keyword">const</span> Home = <span class="hljs-function">() =&gt;</span> (<br>  &lt;&gt;<br>    &lt;Head&gt;<br>      &lt;title&gt;Home&lt;/title&gt;<br>    &lt;/Head&gt;<br> &lt;/&gt;<br>)<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> Home<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>javascript</tag>
      
      <tag>react</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>indexedDB</title>
    <link href="/blog/2021/08/02/indexedDB/"/>
    <url>/blog/2021/08/02/indexedDB/</url>
    
    <content type="html"><![CDATA[<h1 id="IndexedDB-入门教程"><a href="#IndexedDB-入门教程" class="headerlink" title="IndexedDB 入门教程"></a>IndexedDB 入门教程</h1><h2 id="1-说明"><a href="#1-说明" class="headerlink" title="1. 说明"></a>1. 说明</h2><p>随着浏览器的功能不断增强，更多的网站考虑将大量数据储存在客户端，这样可以减少从服务器获取数据，直接从本地获取数据。</p><ul><li>Cookie：存储的大小不超过4kb，且每次请求接口都会将cookie发送到服务器。</li><li>LocalStorage：存储大小在2.5MB-10MB之间，且不提供搜索功能，不能建立自定义的索引。</li><li>IndexedDB：IndexedDB 就是浏览器提供的本地数据库，它可以被网页脚本创建和操作。IndexedDB 允许储存大量数据，提供查找接口，还能建立索引。这些都是 LocalStorage 所不具备的。就数据库类型而言，IndexedDB 不属于关系型数据库（不支持 SQL 查询语句），更接近 NoSQL 数据库。<ul><li><strong>键值对储存</strong>。 IndexedDB 内部采用对象仓库（object store）存放数据。所有类型的数据都可以直接存入，包括 JavaScript 对象。对象仓库中，数据以”键值对”的形式保存，每一个数据记录都有对应的主键，主键是独一无二的，不能有重复，否则会抛出一个错误。</li><li><strong>异步</strong>。 IndexedDB 操作时不会锁死浏览器，用户依然可以进行其他操作，这与 LocalStorage 形成对比，后者的操作是同步的。异步设计是为了防止大量数据的读写，拖慢网页的表现。</li><li><strong>支持事务</strong>。 IndexedDB 支持事务（transaction），这意味着一系列操作步骤之中，只要有一步失败，整个事务就都取消，数据库回滚到事务发生之前的状态，不存在只改写一部分数据的情况。</li><li> <strong>同源限制</strong>IndexedDB 受到同源限制，每一个数据库对应创建它的域名。网页只能访问自身域名下的数据库，而不能访问跨域的数据库。*</li><li> <strong>储存空间大</strong> IndexedDB 的储存空间比 LocalStorage 大得多，一般来说不少于 250MB，甚至没有上限。</li><li> <strong>支持二进制储存</strong>。 IndexedDB 不仅可以储存字符串，还可以储存二进制数据（ArrayBuffer 对象和 Blob 对象）。</li></ul></li></ul><h2 id="2-基本概念"><a href="#2-基本概念" class="headerlink" title="2. 基本概念"></a>2. 基本概念</h2><p>IndexedDB 是一个比较复杂的 API，涉及不少概念。它把不同的实体，抽象成一个个对象接口。学习这个 API，就是学习它的各种对象接口。</p><blockquote><ul><li>数据库：IDBDatabase 对象</li><li>对象仓库：IDBObjectStore 对象</li><li>索引： IDBIndex 对象</li><li>事务： IDBTransaction 对象</li><li>操作请求：IDBRequest 对象</li><li>指针： IDBCursor 对象</li><li>主键集合：IDBKeyRange 对象</li></ul></blockquote><h4 id="（1）数据库"><a href="#（1）数据库" class="headerlink" title="（1）数据库"></a>（1）数据库</h4><p>数据库是一系列相关数据的容器。每个域名（严格的说，是协议 + 域名 + 端口）都可以新建任意多个数据库。</p><p>IndexedDB 数据库有版本的概念。同一个时刻，只能有一个版本的数据库存在。如果要修改数据库结构（新增或删除表、索引或者主键），只能通过升级数据库版本完成。</p><h4 id="（2）对象仓库"><a href="#（2）对象仓库" class="headerlink" title="（2）对象仓库"></a>（2）对象仓库</h4><p>每个数据库包含若干个对象仓库（object store）。它类似于关系型数据库的表格。 </p><h4 id="（3）数据记录"><a href="#（3）数据记录" class="headerlink" title="（3）数据记录"></a>（3）数据记录</h4><p>对象仓库保存的是数据记录。每条记录类似于关系型数据库的行，但是只有主键和数据体两部分。主键用来建立默认的索引，必须是不同的，否则会报错。主键可以是数据记录里面的一个属性，也可以指定为一个递增的整数编号。</p><blockquote><p>{ id: 1,content: “测试” } </p></blockquote><p>上面的对象，id可以为主键/索引，数据体可以是任意数据类型，不限于对象。</p><h4 id="（4）索引"><a href="#（4）索引" class="headerlink" title="（4）索引"></a>（4）索引</h4><p>为了加速数据的检索，可以在对象仓库里面，为不同的属性建立索引。</p><h4 id="（5）事务"><a href="#（5）事务" class="headerlink" title="（5）事务"></a>（5）事务</h4><p>数据记录的读写和删改，都要通过事务完成。事务对象提供 <font color=red>error</font>、<font color=red>abort</font>和<font color=red>complete</font>三个事件，用来监听操作结果。</p><h2 id="3-操作流程"><a href="#3-操作流程" class="headerlink" title="3. 操作流程"></a>3. 操作流程</h2><p>IndexedDB 数据库的各种操作，一般是按照下面的流程进行的。这个部分只给出简单的代码示例，用于快速上手，详细的各个对象的 API 请看这里。</p><h4 id="3-1-打开数据库"><a href="#3-1-打开数据库" class="headerlink" title="3.1. 打开数据库"></a>3.1. 打开数据库</h4><p> 使用 IndexedDB 的第一步是打开数据库，使用indexedDB.open()方法。<br> <figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> request = indexedDB.open(databaseName, version);<br></code></pre></div></td></tr></table></figure></p><ul><li>databaseName：数据库名称，如果没有当前数据库，会创建当前数据库</li><li>version：指定数据库版本，当你想要更改数据库格式（比如增加对象存储，非增加记录），必须指定更高版本，通过 versionchange 来更改</li></ul><p>(1) error<br>        error事件表示打开数据库失败。<br>    <figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">request.error = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(e,<span class="hljs-string">&quot;数据库打开错误&quot;</span>)<br>&#125;<br></code></pre></div></td></tr></table></figure><br>(2) success<br>    <figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> db;<br>request.success  = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    db = request.result; <br>    <span class="hljs-comment">// 通过request的result对象获取数据库对象</span><br>    <span class="hljs-built_in">console</span>.log(e,<span class="hljs-string">&quot;数据库打开成功&quot;</span>)<br>&#125;<br></code></pre></div></td></tr></table></figure><br>(3) upgradeneeded<br>    如果指定的版本号，大于数据库的实际版本号，就会发生数据库升级事件 <font color=red>upgradeneeded</font><br>     <figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> db;<br>request.success  = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>    db = event.target.result; <br>    <span class="hljs-comment">// 通过event的target.result对象获取数据库实例</span><br>    <span class="hljs-built_in">console</span>.log(event,<span class="hljs-string">&quot;数据库升级&quot;</span>)<br>&#125;<br></code></pre></div></td></tr></table></figure></p><h4 id="3-2-创建数据库"><a href="#3-2-创建数据库" class="headerlink" title="3.2. 创建数据库"></a>3.2. 创建数据库</h4>]]></content>
    
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql</title>
    <link href="/blog/2021/07/05/mysql/"/>
    <url>/blog/2021/07/05/mysql/</url>
    
    <content type="html"><![CDATA[<h2 id="1-下载mysql"><a href="#1-下载mysql" class="headerlink" title="1.下载mysql"></a>1.下载mysql</h2><p><a href="https://pan.baidu.com/s/1-53ZhX1XORZ2GG_nwte1cw">点击下载免安装版</a><br>提取码：come</p><h2 id="2-解压到本地目录"><a href="#2-解压到本地目录" class="headerlink" title="2.解压到本地目录"></a>2.解压到本地目录</h2><p><img src="https://qiniu.zhaoxinchuan.cn/mysql/1.webp" alt="解压目录"><br><em>由于使用的免安装版，所以在解压目录中并没有my.ini配置文件。这里我们手动创建my.ini文件,复制下方配置</em></p><figure class="highlight ini"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ini"><span class="hljs-comment"># </span><br><span class="hljs-comment">#此数据库没有my.ini文件，当前文件为后来增加的</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#</span><br><span class="hljs-section">[client]</span><br><span class="hljs-attr">default-character-set</span> = utf8mb4<br><span class="hljs-section">[mysql]</span><br><span class="hljs-attr">default-character-set</span> = utf8mb4<br><span class="hljs-section">[mysqld]</span><br><span class="hljs-attr">character-set-client-handshake</span> = <span class="hljs-literal">FALSE</span><br><span class="hljs-attr">character-set-server</span> = utf8mb4<br><span class="hljs-attr">collation-server</span> = utf8mb4_bin<br><span class="hljs-attr">init_connect</span>=<span class="hljs-string">&#x27;SET NAMES utf8mb4&#x27;</span><br><span class="hljs-comment"># Remove leading # and set to the amount of RAM for the most important data</span><br><span class="hljs-comment"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span><br><span class="hljs-attr">innodb_buffer_pool_size</span> = <span class="hljs-number">128</span>M<br><span class="hljs-comment"># Remove leading # to turn on a very important data integrity option: logging</span><br><span class="hljs-comment"># changes to the binary log between backups.</span><br><span class="hljs-comment"># log_bin</span><br><span class="hljs-comment"># These are commonly set, remove the # and set as required.</span><br><br><span class="hljs-comment">#该参数指定了安装 MySQL 的安装路径，填写全路径可以解决相对路径所造成的问题。</span><br><span class="hljs-attr">basedir</span> = E:/mysql-<span class="hljs-number">5.7</span>.<span class="hljs-number">29</span>-winx64<br><span class="hljs-comment">#该参数指定了 MySQL 的数据库文件放在什么路径下。数据库文件即我们常说的 MySQL data 文件。</span><br><span class="hljs-attr">datadir</span> = E:/MySQL/Data<br><br><br><span class="hljs-attr">port</span> = <span class="hljs-number">3306</span><br><span class="hljs-comment"># server_id = .....</span><br><span class="hljs-comment"># Remove leading # to set options mainly useful for reporting servers.</span><br><span class="hljs-comment"># The server defaults are faster for transactions and fast SELECTs.</span><br><span class="hljs-comment"># Adjust sizes as needed, experiment to find the optimal values.</span><br><span class="hljs-attr">join_buffer_size</span> = <span class="hljs-number">128</span>M<br><span class="hljs-attr">sort_buffer_size</span> = <span class="hljs-number">16</span>M<br><span class="hljs-attr">read_rnd_buffer_size</span> = <span class="hljs-number">16</span>M <br><br><span class="hljs-comment">#定义应该支持的sql语法，对数据的校验等等</span><br><span class="hljs-attr">sql_mode</span>=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES<br><br><br><span class="hljs-attr">max_allowed_packet</span>=<span class="hljs-number">300</span>M<br></code></pre></div></td></tr></table></figure><ul><li>参数说明</li><li>basedir:输入当前mysql的解压目录</li><li>datadir：数据库文件放在哪里</li><li>port：在什么端口启动</li></ul><h2 id="3-命令行启动mysql服务"><a href="#3-命令行启动mysql服务" class="headerlink" title="3.命令行启动mysql服务"></a>3.命令行启动mysql服务</h2><ul><li><em>由于mysql没有配置环境变量，所以输入mysql后，提示无法识别</em></li></ul><ol><li><p>此电脑，右键属性<br> <img src="https://qiniu.zhaoxinchuan.cn/mysql/2.webp" alt="属性"></p></li><li><p>高级系统设置-环境变量-系统变量-Path(编辑-新建)-mysql安装目录-一路确定，在输入mysql就不会提示无法识别了<br> <img src="https://qiniu.zhaoxinchuan.cn/mysql/3.webp" alt="高级系统设置"><br> <img src="https://qiniu.zhaoxinchuan.cn/mysql/4.webp" alt="环境变量"><br> <img src="https://qiniu.zhaoxinchuan.cn/mysql/5.webp" alt="新增变量"></p></li><li><p>安装mysqld服务</p> <figure class="highlight ada"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ada">mysqld <span class="hljs-comment">--install</span><br></code></pre></div></td></tr></table></figure><p> 安装成功提示：<font color=red>Service successfully installed.</font></p></li><li><p>初始化mysql</p> <figure class="highlight brainfuck"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs brainfuck"><span class="hljs-comment">mysqld</span> --<span class="hljs-comment">initialize</span> --<span class="hljs-comment">console</span><br></code></pre></div></td></tr></table></figure><p> <strong>初始化成功后会产生一个随机密码，请记住，待会儿会用到</strong><br> <img src="https://qiniu.zhaoxinchuan.cn/mysql/6.webp" alt="初始化mysql"></p></li><li><p>启动mysql</p> <figure class="highlight crmsh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs crmsh"><span class="hljs-comment"># 启动命令</span><br>net <span class="hljs-literal">start</span> mysql<br><span class="hljs-comment"># 停止命令</span><br>net <span class="hljs-literal">stop</span> mysql<br></code></pre></div></td></tr></table></figure></li><li><p>修改密码<br><em>由于随机密码过于繁琐，所以我们将密码修改为自定义的密码</em></p><figure class="highlight nginx"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nginx"><span class="hljs-comment"># 登录mysql</span><br><span class="hljs-attribute">mysql</span> -p root -u<br></code></pre></div></td></tr></table></figure><ul><li>root:初始化的默认名称<br>回车后会输入登录密码(初始化产生的随机密码)<br><img src="https://qiniu.zhaoxinchuan.cn/mysql/7.webp" alt="登录"><figure class="highlight pgsql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs pgsql"># <span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">for</span> 用户名(默认为root)@localhost = <span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;新密码&#x27;</span>);<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">for</span> root@localhost = <span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;新密码&#x27;</span>);<br></code></pre></div></td></tr></table></figure><img src="https://qiniu.zhaoxinchuan.cn/mysql/8.webp" alt="修改成功"></li></ul><p> <font color=red><strong>有时候，在命令行会出现各种各样的问题，所以尽量使用 以管理员身份打开</strong></font></p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>数据库安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>web导出excel</title>
    <link href="/blog/2021/06/11/export-excel/"/>
    <url>/blog/2021/06/11/export-excel/</url>
    
    <content type="html"><![CDATA[<h3 id="web-端导出-table-中的数据，将数据导出为-excel-文件是后台管理系统中常见的需求，导出的方法也有很多中，下面给出几个常用的方法"><a href="#web-端导出-table-中的数据，将数据导出为-excel-文件是后台管理系统中常见的需求，导出的方法也有很多中，下面给出几个常用的方法" class="headerlink" title="web 端导出 table 中的数据，将数据导出为 excel 文件是后台管理系统中常见的需求，导出的方法也有很多中，下面给出几个常用的方法"></a>web 端导出 table 中的数据，将数据导出为 excel 文件是后台管理系统中常见的需求，导出的方法也有很多中，下面给出几个常用的方法</h3><ol><li>使用 table 标签的形式导出</li></ol><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;body&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">      <span class="hljs-comment">//要导出的json数据</span></span><br><span class="javascript">      <span class="hljs-keyword">const</span> jsonData = [</span><br>        &#123;<br><span class="javascript">          name: <span class="hljs-string">&quot;路人甲&quot;</span>,</span><br><span class="javascript">          phone: <span class="hljs-string">&quot;123456&quot;</span>,</span><br><span class="javascript">          email: <span class="hljs-string">&quot;123@123456.com&quot;</span>,</span><br>        &#125;,<br>        &#123;<br><span class="javascript">          name: <span class="hljs-string">&quot;路人乙&quot;</span>,</span><br><span class="javascript">          phone: <span class="hljs-string">&quot;123456&quot;</span>,</span><br><span class="javascript">          email: <span class="hljs-string">&quot;123@123456.com&quot;</span>,</span><br>        &#125;,<br>        &#123;<br><span class="javascript">          name: <span class="hljs-string">&quot;路人丙&quot;</span>,</span><br><span class="javascript">          phone: <span class="hljs-string">&quot;123456&quot;</span>,</span><br><span class="javascript">          email: <span class="hljs-string">&quot;123@123456.com&quot;</span>,</span><br>        &#125;,<br>      ];<br><span class="javascript">      <span class="hljs-comment">//列标题</span></span><br><span class="handlebars"><span class="xml">      let str = &quot;<span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>电话<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>邮箱<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>&quot;;</span></span><br><span class="javascript">      <span class="hljs-comment">//循环遍历，每行加入tr标签，每个单元格加td标签</span></span><br><span class="javascript">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; jsonData.length; i++) &#123;</span><br><span class="javascript">        str += <span class="hljs-string">&quot;&lt;tr&gt;&quot;</span>;</span><br><span class="javascript">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> item <span class="hljs-keyword">in</span> jsonData[i]) &#123;</span><br><span class="javascript">          <span class="hljs-comment">//增加\t为了不让表格显示科学计数法或者其他格式</span></span><br><span class="javascript">          str += <span class="hljs-string">`&lt;td&gt;<span class="hljs-subst">$&#123;jsonData[i][item] + <span class="hljs-string">&quot;\t&quot;</span>&#125;</span>&lt;/td&gt;`</span>;</span><br>        &#125;<br><span class="javascript">        str += <span class="hljs-string">&quot;&lt;/tr&gt;&quot;</span>;</span><br>      &#125;<br><br><span class="javascript">      <span class="hljs-comment">//Worksheet名</span></span><br><span class="javascript">      <span class="hljs-keyword">let</span> worksheet = <span class="hljs-string">&quot;Sheet1&quot;</span>;</span><br><span class="javascript">      <span class="hljs-keyword">let</span> uri = <span class="hljs-string">&quot;data:application/vnd.ms-excel;base64,&quot;</span>;</span><br><br><span class="javascript">      <span class="hljs-comment">//下载的表格模板数据</span></span><br><span class="handlebars"><span class="xml">      let templates = `<span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span>$&#123;str&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#x27;font-size: 20px;color: red;&#x27;</span>&gt;</span>使用table标签方式将json导出xls文件<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&#x27;tableToExcel()&#x27;</span>&gt;</span>导出<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>`;</span></span><br><span class="javascript">      <span class="hljs-comment">//下载模板</span></span><br><span class="javascript">      <span class="hljs-keyword">let</span> body = <span class="hljs-built_in">document</span>.getElementsByClassName(<span class="hljs-string">&quot;body&quot;</span>)[<span class="hljs-number">0</span>];</span><br>      body.innerHTML = templates;<br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">tableToExcel</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="handlebars"><span class="xml">        var template = `$&#123;templates&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>`;</span></span><br><span class="javascript">        <span class="hljs-built_in">window</span>.location.href = uri + base64(template);</span><br>      &#125;<br><span class="javascript">      <span class="hljs-comment">//输出base64编码</span></span><br><span class="javascript">      <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">base64</span>(<span class="hljs-params">s</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> <span class="hljs-built_in">window</span>.btoa(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(s)));</span><br>      &#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></div></td></tr></table></figure><ol start="2"><li><p>jquery + jquery-table2excel</p><blockquote><p>插件地址：<a href="https://github.com/rainabba/jquery-table2excel">jquery-table2excel</a></p></blockquote><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;table&quot;</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">cellspacing</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>年龄<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>邮箱<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>路人甲<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>18<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>18@163.com<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>导出excel表格<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/2.1.3/jquery.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./js/jquery.table2excel.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">    <span class="hljs-comment">// 配置</span></span><br><span class="javascript">    <span class="hljs-comment">// exclude： 不被导出的表格行的CSS class类。</span></span><br><span class="javascript">    <span class="hljs-comment">// name： 导出的Excel文档的名称。</span></span><br><span class="javascript">    <span class="hljs-comment">// filename： Excel文件的名称。</span></span><br><span class="javascript">    <span class="hljs-comment">// fileext: 文件后缀名</span></span><br><span class="javascript">    <span class="hljs-comment">// exclude_img： 是否导出图片。</span></span><br><span class="javascript">    <span class="hljs-comment">// exclude_links： 是否导出超链接</span></span><br><span class="javascript">    <span class="hljs-comment">// exclude_inputs： 是否导出输入框中的内容。</span></span><br><span class="javascript">    $(<span class="hljs-string">&quot;.btn&quot;</span>).click(<span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">      $(<span class="hljs-string">&quot;#table&quot;</span>).table2excel(&#123;</span><br><span class="javascript">        filename: <span class="hljs-string">&quot;导出excel&quot;</span>,</span><br>      &#125;);<br>    &#125;);<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></div></td></tr></table></figure></li><li><p><a href="https://github.com/SheetJS/sheetjs/blob/master/dist/xlsx.js">xlxs.js</a></p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux下部署nginx</title>
    <link href="/blog/2021/06/02/nginx/"/>
    <url>/blog/2021/06/02/nginx/</url>
    
    <content type="html"><![CDATA[<blockquote><p>nginx 部署 web 项目</p></blockquote><ol><li>环境安装</li></ol><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">yum -y install gcc gcc-c++ autoconf pcre-devel make automake<br>yum -y install wget httpd-tools vim<br></code></pre></div></td></tr></table></figure><ol start="2"><li><p>创建基础目录</p><blockquote><blockquote><blockquote><p>html</p><blockquote><p>app<br>backup<br>download<br>logs<br>work</p></blockquote></blockquote></blockquote></blockquote></li><li><p>Nginx 搭建<br>配置 yum 源</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">[nginx]<br>name=nginx repo<br>baseurl=http:<span class="hljs-comment">//nginx.org/packages/OS/OSRELEASE/$basearch/</span><br>gpgcheck=<span class="hljs-number">0</span><br>enabled=<span class="hljs-number">1</span><br></code></pre></div></td></tr></table></figure><p>创建 nginx.repo 文件,把上面的源代码复制进去</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++">vim/etc/yum.repos.d/nginx.repo;<br><br></code></pre></div></td></tr></table></figure><p>启动命令</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">nginx -c/etc/nginx/nginx.conf;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vue3</title>
    <link href="/blog/2021/05/31/vue3/"/>
    <url>/blog/2021/05/31/vue3/</url>
    
    <content type="html"><![CDATA[<h3 id="初识vue3"><a href="#初识vue3" class="headerlink" title="初识vue3"></a>初识vue3</h3><h4 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h4><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br><br>&lt;head&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;meta http-equiv=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> content=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;<br>    &lt;meta name=<span class="hljs-string">&quot;viewport&quot;</span> content=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;<br>    &lt;title&gt;初时vue3&lt;/title&gt;<br>&lt;/head&gt;<br><br>&lt;body&gt;<br>    &lt;div id=<span class="hljs-string">&quot;app&quot;</span>&gt;<br><br>    &lt;/div&gt;<br>    &lt;script src=<span class="hljs-string">&quot;https://unpkg.com/vue@next&quot;</span>&gt;&lt;/script&gt;<br>    &lt;script&gt;<br>        <span class="hljs-keyword">const</span> app = Vue.createApp(&#123;<br>            template: <span class="hljs-string">`&lt;div&gt;Hello world!&lt;/div&gt;`</span><br>        &#125;);<br>        app.mount(<span class="hljs-string">&quot;#app&quot;</span>);<br>    &lt;/script&gt;<br>&lt;/body&gt;<br><br>&lt;/html&gt;<br></code></pre></div></td></tr></table></figure><h4 id="对比vue2-vue3"><a href="#对比vue2-vue3" class="headerlink" title="对比vue2 - vue3"></a>对比vue2 - vue3</h4><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-comment">// 实例化对比</span><br><span class="hljs-comment">// vue2</span><br><span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;<br>    el: <span class="hljs-string">&quot;元素ID&quot;</span>,<br>    data: &#123;&#125;,<br>    methods: &#123;&#125;<br>&#125;);<br><br><span class="hljs-comment">// vue3</span><br><span class="hljs-keyword">const</span> app = Vue.createApp(&#123;<br>    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span>&#123;&#125;<br>    &#125;,<br>    methods: &#123;&#125;<br>&#125;);<br><span class="hljs-keyword">const</span> vm = app.mount(<span class="hljs-string">&quot;元素ID&quot;</span>);<br></code></pre></div></td></tr></table></figure><h4 id="生命周期对比"><a href="#生命周期对比" class="headerlink" title="生命周期对比"></a>生命周期对比</h4><style>    .img{width:50%}    .flex{        display:flex;    }    .text-center{        text-align:center;    }</style><div class="flex">    <div>         <h4>vue2：</h4>        <image src="https://qiniu.zhaoxinchuan.cn/vue3/lifecycle2.webp">    </div>    <div>        <h4>vue3：</h4>        <image src="https://qiniu.zhaoxinchuan.cn/vue3/lifecycle3.webp">    </div></div><div>    <div>        <h4 class="text-center">生命周期执行顺序</h4>    </div>    <div class="flex">        <p>            <font color=red>beforeCreate</font>            =>            <font color=red>created</font>            =>            <font color=red>beforeMount</font>            =>            <font color=red>mounted</font>            =>            <font color=red>beforeUpdate</font>            =>            <font color=red>updated</font>            =>            <font color=red>beforeDestroy</font>            =>            <font color=red>destroyed</font>        </p>        <p>            <font color=red>setup</font>            =>            <font color=red>onBeforeMount</font>            =>            <font color=red>onMounted</font>            =>            <font color=red>onBeforeUpdate</font>            =>            <font color=red>onUpdated</font>            =>            <font color=red>onBeforeUnmount</font>            =>            <font color=red>onUnmounted</font>        </p>    </div></div><h3 id="vue3写一个计数器"><a href="#vue3写一个计数器" class="headerlink" title="vue3写一个计数器"></a>vue3写一个计数器</h3><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br><br>&lt;head&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;meta http-equiv=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> content=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;<br>    &lt;meta name=<span class="hljs-string">&quot;viewport&quot;</span> content=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;<br>    &lt;title&gt;Demo2计数器&lt;/title&gt;<br>&lt;/head&gt;<br><br>&lt;body&gt;<br>    &lt;div id=<span class="hljs-string">&quot;app&quot;</span>&gt;<br><br>    &lt;/div&gt;<br>    &lt;script src=<span class="hljs-string">&quot;https://unpkg.com/vue@next&quot;</span>&gt;&lt;/script&gt;<br>    &lt;script&gt;<br>        <span class="hljs-keyword">const</span> app = Vue.createApp(&#123;<br>            template: <span class="hljs-string">`&lt;div&gt;&#123;&#123;counter&#125;&#125;&lt;/div&gt;`</span>,<br>            <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br>                <span class="hljs-keyword">return</span> &#123;<br>                    counter: <span class="hljs-number">1</span><br>                &#125;<br>            &#125;,<br>            <span class="hljs-function"><span class="hljs-title">mounted</span>(<span class="hljs-params"></span>)</span> &#123;<br>                <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>                    <span class="hljs-built_in">this</span>.counter++;<br>                &#125;, <span class="hljs-number">1000</span>);<br>            &#125;,<br>        &#125;);<br>        app.mount(<span class="hljs-string">&quot;#app&quot;</span>);<br>    &lt;/script&gt;<br>&lt;/body&gt;<br><br>&lt;/html&gt;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>es6</title>
    <link href="/blog/2021/04/26/es6/"/>
    <url>/blog/2021/04/26/es6/</url>
    
    <content type="html"><![CDATA[<ul><li>ECMAScript6 就是 ECMAScript2015</li></ul><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><ul><li>浏览器调试,使用最新版本的浏览器,可以调试一些Es6的语法</li><li>使用nodeJs调试</li><li>使用babel翻译   <figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">npm install babel-cli -g<br>    or <br>yarn add babel-cli <span class="hljs-built_in">global</span><br></code></pre></div></td></tr></table></figure><ul><li>使用命令行前,先在项目根目录下创建 .babelrc 文件<ul><li>npm install -D babel-presset-es2015</li><li>yarn add babel-presset-es2015 –dev<figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs babel">.babelrc<br>&#123;<br>    &quot;presets&quot;: [&quot;es2015&quot;]<br>&#125;<br></code></pre></div></td></tr></table></figure></li></ul></li></ul></li></ul><h2 id="const-let-关键字"><a href="#const-let-关键字" class="headerlink" title="const let 关键字"></a>const let 关键字</h2><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-comment">// 声明一个只读的常量，一旦声明，常量的值就不能改变。</span><br><span class="hljs-keyword">const</span> name = <span class="hljs-string">&quot;tom&quot;</span>;<br><span class="hljs-comment">// 我们尝试修改</span><br>name = <span class="hljs-string">&quot;jerry&quot;</span>;<br><span class="hljs-comment">// 此时报错： Assignment to constant variable(对常量变量的赋值)</span><br><br><span class="hljs-comment">/**---------------------------分割线---------------------------*/</span><br><br><span class="hljs-comment">// let 声明的变量只在 let 命令所在的代码块内有效</span><br>&#123;<br>    <span class="hljs-keyword">let</span> inside = <span class="hljs-string">&quot;inside&quot;</span>;<br>&#125;<br><span class="hljs-built_in">console</span>.log(inside);<br><span class="hljs-comment">// 此时报错： inside is not defined</span><br></code></pre></div></td></tr></table></figure><h2 id="扩展运算符"><a href="#扩展运算符" class="headerlink" title="扩展运算符"></a>扩展运算符</h2><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-comment">// 扩展运算符写法 ... 三个点</span><br><span class="hljs-comment">// 例1：参数传递</span><br><span class="hljs-keyword">let</span> nums = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>];<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params">a,b</span>)</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(a+b);<br>&#125;;<br><span class="hljs-comment">// 在 es6以前,我们都是使用apply传递这种参数类型</span><br>add.apply(<span class="hljs-literal">null</span>,nums); <span class="hljs-comment">// 3</span><br><span class="hljs-comment">// 使用扩展运算符</span><br>add(...nums); <span class="hljs-comment">// 3</span><br><br><span class="hljs-comment">/**---------------------------分割线---------------------------*/</span><br><br><span class="hljs-comment">// 例2：数组合并 || 复制</span><br><span class="hljs-keyword">const</span> arr1 = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>];<br><span class="hljs-keyword">const</span> arr2 = [<span class="hljs-number">3</span>,<span class="hljs-number">4</span>];<br><span class="hljs-comment">//  在 es6以前, concat</span><br><span class="hljs-keyword">const</span> arr3 = arr1.concat(arr2);<br><span class="hljs-comment">// 使用扩展运算符</span><br><span class="hljs-keyword">const</span> arr4 = [...arr1,...arr2];<br><br><span class="hljs-comment">/**---------------------------分割线---------------------------*/</span><br><br><span class="hljs-comment">// 例3：字符串转数组</span><br><span class="hljs-keyword">const</span> strToArr = [...<span class="hljs-string">&quot;say hello&quot;</span>];<br></code></pre></div></td></tr></table></figure><h2 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h2><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-comment">// 例1：数组的解构赋值</span><br><span class="hljs-keyword">const</span> [a,b,c] = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>];<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">`a:<span class="hljs-subst">$&#123;a&#125;</span>;b:<span class="hljs-subst">$&#123;b&#125;</span>;c:<span class="hljs-subst">$&#123;c&#125;</span>`</span>);<br><span class="hljs-comment">// a:1;b:2;c:3</span><br><span class="hljs-comment">// 左右结构相同,就会把右边的值赋值给左边接收的参数</span><br><br><span class="hljs-keyword">const</span> [name,age] = [<span class="hljs-string">&quot;jerry&quot;</span>];<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">`name:<span class="hljs-subst">$&#123;name&#125;</span>;age:<span class="hljs-subst">$&#123;age&#125;</span>`</span>);<br><span class="hljs-comment">// name:jerry;age:undefined</span><br><span class="hljs-comment">// 没有值的参数,会被赋值为undefined</span><br><br><span class="hljs-comment">// 如果想取指定位置的值</span><br><span class="hljs-keyword">const</span> [_name,,_eat] = [<span class="hljs-string">&quot;tom&quot;</span>,<span class="hljs-string">&quot;18&quot;</span>,<span class="hljs-string">&quot;fish&quot;</span>];<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">`_name:<span class="hljs-subst">$&#123;_name&#125;</span>;_eat:<span class="hljs-subst">$&#123;_eat&#125;</span>`</span>);<br><span class="hljs-comment">// _name:tom;_eat:fish</span><br><br><span class="hljs-comment">/**---------------------------分割线---------------------------*/</span><br><br><span class="hljs-comment">// 例2：对象的解构</span><br><span class="hljs-keyword">const</span> &#123;data,<span class="hljs-attr">data</span>: &#123;name&#125;,code,msg&#125; = &#123;<span class="hljs-attr">data</span>: &#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&quot;jerry&quot;</span>&#125;,<span class="hljs-attr">code</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">msg</span>:<span class="hljs-string">&quot;ok&quot;</span>&#125;;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">`data:<span class="hljs-subst">$&#123;data&#125;</span>;name:<span class="hljs-subst">$&#123;name&#125;</span>;code:<span class="hljs-subst">$&#123;code&#125;</span>;msg:<span class="hljs-subst">$&#123;msg&#125;</span>;`</span>);<br><span class="hljs-comment">// data:[object Object];name:jerry;code:0;msg:ok;</span><br><br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>es6</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>video标签</title>
    <link href="/blog/2020/08/05/video/"/>
    <url>/blog/2020/08/05/video/</url>
    
    <content type="html"><![CDATA[<h2 id="video标签"><a href="#video标签" class="headerlink" title="video标签"></a>video标签</h2><p><a href="https://www.runoob.com/tags/av-event-canplay.html">菜鸟教程</a></p><p><a href="https://www.w3school.com.cn/tags/tag_audio.asp">W3Cschool</a></p><table><thead><tr><th>属性</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>autoplay</td><td>autoplay</td><td>如果出现该属性，则视频在就绪后马上播放。</td></tr><tr><td>controls</td><td>controls</td><td>如果出现该属性，则向用户显示控件，比如播放按钮。</td></tr><tr><td>width</td><td>pixels</td><td>设置视频播放器的宽度。</td></tr><tr><td>height</td><td>pixels</td><td>设置视频播放器的高度。</td></tr><tr><td>loop</td><td>loop</td><td>如果出现该属性，则当媒介文件完成播放后再次开始播放。</td></tr><tr><td>muted</td><td>muted</td><td>规定视频的音频输出应该被静音。放</td></tr><tr><td>poster</td><td>URL</td><td>规定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。</td></tr><tr><td>preload</td><td>preload</td><td>如果出现该属性，则视频在页面加载时进行加载，并预备播放。</td></tr></tbody></table><p>如果使用 “autoplay”，则忽略该属性。<br>src | url |     要播放的视频的 URL。</p><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>video<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./video/sp2.mp4&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;myvideo&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> myvideo = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;myvideo&quot;</span>);</span><br><span class="javascript">        myvideo.addEventListener(<span class="hljs-string">&quot;loadstart&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;提示音频的元数据已加载：loadstart&quot;</span>);</span><br>        &#125;);<br><span class="javascript">        myvideo.addEventListener(<span class="hljs-string">&quot;durationchange&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;提示视频的时长已改变：durationchange&quot;</span>);</span><br>        &#125;);<br><span class="javascript">        myvideo.addEventListener(<span class="hljs-string">&quot;loadedmetadata&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;提示音频的元数据已加载：loadedmetadata&quot;</span>);</span><br>        &#125;);<br><span class="javascript">        myvideo.addEventListener(<span class="hljs-string">&quot;loadeddata&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;提示当前帧的数据是可用的：loadeddata&quot;</span>);</span><br>        &#125;);<br><span class="javascript">        myvideo.addEventListener(<span class="hljs-string">&quot;progress&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;提示视频正在下载中：progress&quot;</span>);</span><br>        &#125;);<br><span class="javascript">        myvideo.addEventListener(<span class="hljs-string">&quot;canplay&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;提示该视频已准备好开始播放：canplay&quot;</span>);</span><br>        &#125;);<br><span class="javascript">        myvideo.addEventListener(<span class="hljs-string">&quot;canplaythrough&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;提示视频能够不停顿地一直播放：canplaythrough&quot;</span>);</span><br>        &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></div></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs stylus"><span class="hljs-comment">// 结果</span><br>提示音频的元数据已加载：loadstart<br><span class="hljs-selector-tag">video</span><span class="hljs-selector-class">.html</span>:<span class="hljs-number">20</span> 提示视频的时长已改变：durationchange<br><span class="hljs-selector-tag">video</span><span class="hljs-selector-class">.html</span>:<span class="hljs-number">23</span> 提示音频的元数据已加载：loadedmetadata<br><span class="hljs-selector-tag">video</span><span class="hljs-selector-class">.html</span>:<span class="hljs-number">29</span> 提示视频正在下载中：progress<br><span class="hljs-selector-tag">video</span><span class="hljs-selector-class">.html</span>:<span class="hljs-number">26</span> 提示当前帧的数据是可用的：loadeddata<br><span class="hljs-selector-tag">video</span><span class="hljs-selector-class">.html</span>:<span class="hljs-number">32</span> 提示该视频已准备好开始播放：canplay<br><span class="hljs-selector-tag">video</span><span class="hljs-selector-class">.html</span>:<span class="hljs-number">35</span> 提示视频能够不停顿地一直播放：canplaythrough<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>html5</category>
      
    </categories>
    
    
    <tags>
      
      <tag>html5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>reduce</title>
    <link href="/blog/2020/03/14/reduce/"/>
    <url>/blog/2020/03/14/reduce/</url>
    
    <content type="html"><![CDATA[<h3 id="初识reduce"><a href="#初识reduce" class="headerlink" title="初识reduce"></a>初识reduce</h3><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">array.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">total, currentValue, currentIndex, arr</span>), <span class="hljs-title">initialValue</span>)</span>;<br></code></pre></div></td></tr></table></figure><table><thead><tr><th align="left"><font color=red>total</font></th><th align="right"><font color=red>currentValue</font></th><th align="center">currentIndex</th><th align="center">arr</th><th align="center">initialValue</th></tr></thead><tbody><tr><td align="left"><font color=red>初始值</font>, 或者计算结束后的返回值.</td><td align="right">当前元素.</td><td align="center">当前元素的索引.</td><td align="center">当前元素所属的数组对象.</td><td align="center">传递给函数的<font color=red>初始值</font>,相当于total的初始值.</td></tr></tbody></table><h3 id="reduce的高级用法"><a href="#reduce的高级用法" class="headerlink" title="reduce的高级用法"></a>reduce的高级用法</h3><h4 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h4><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> arr = [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>];<br><span class="hljs-keyword">const</span> noRepeat1 = arr.reduce(<span class="hljs-function">(<span class="hljs-params">prev, next</span>) =&gt;</span> &#123;<br>    prev.indexOf(next) === -<span class="hljs-number">1</span> &amp;&amp; prev.push(next);<br>    <span class="hljs-keyword">return</span> prev;<br>&#125;, []);<br><span class="hljs-built_in">console</span>.log(noRepeat1); <span class="hljs-comment">// [1, 2, 3, 4, 5, 6, 9]</span><br></code></pre></div></td></tr></table></figure><h4 id="求最大值"><a href="#求最大值" class="headerlink" title="求最大值"></a>求最大值</h4><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> arr = [<span class="hljs-number">33</span>,<span class="hljs-number">44</span>,<span class="hljs-number">66</span>,<span class="hljs-number">11</span>,<span class="hljs-number">88</span>,<span class="hljs-number">99</span>,<span class="hljs-number">111</span>];<br><span class="hljs-keyword">const</span> max = arr.reduce(<span class="hljs-function">(<span class="hljs-params">prev,next</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.max(prev,next);<br>&#125;,arr[<span class="hljs-number">0</span>]);<br><span class="hljs-built_in">console</span>.log(max); <span class="hljs-comment">// 111</span><br></code></pre></div></td></tr></table></figure><h4 id="求最小值"><a href="#求最小值" class="headerlink" title="求最小值"></a>求最小值</h4><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> arr = [<span class="hljs-number">33</span>,<span class="hljs-number">44</span>,<span class="hljs-number">66</span>,<span class="hljs-number">11</span>,<span class="hljs-number">88</span>,<span class="hljs-number">99</span>,<span class="hljs-number">111</span>];<br><span class="hljs-keyword">const</span> min = arr.reduce(<span class="hljs-function">(<span class="hljs-params">prev,next</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.min(prev,next);<br>&#125;,arr[<span class="hljs-number">0</span>]);<br><span class="hljs-built_in">console</span>.log(min); <span class="hljs-comment">// 11</span><br></code></pre></div></td></tr></table></figure><h4 id="求元素出现的次数"><a href="#求元素出现的次数" class="headerlink" title="求元素出现的次数"></a>求元素出现的次数</h4><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> tomAndJerry = [<span class="hljs-string">&quot;Tom&quot;</span>, <span class="hljs-string">&quot;Jerry&quot;</span>, <span class="hljs-string">&quot;Tom&quot;</span>, <span class="hljs-string">&quot;Speike&quot;</span>, <span class="hljs-string">&quot;Tom&quot;</span>, <span class="hljs-string">&quot;Jerry&quot;</span>];<br><span class="hljs-keyword">const</span> result = tomAndJerry.reduce(<span class="hljs-function">(<span class="hljs-params">prev, next</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (next <span class="hljs-keyword">in</span> prev) &#123;<br>        prev[next]++<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        prev[next] = <span class="hljs-number">1</span><br>    &#125;;<br>    <span class="hljs-keyword">return</span> prev;<br>&#125;, &#123;&#125;);<br><span class="hljs-built_in">console</span>.log(result); <span class="hljs-comment">// &#123;Tom: 3, Jerry: 2, Speike: 1&#125;</span><br></code></pre></div></td></tr></table></figure><h4 id="二维数组转一维数组"><a href="#二维数组转一维数组" class="headerlink" title="二维数组转一维数组"></a>二维数组转一维数组</h4><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> arr = [<br>        [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>],<br>        [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br>    ];<br><span class="hljs-keyword">const</span> result = arr.reduce(<span class="hljs-function">(<span class="hljs-params">prev, next</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> prev.concat(next)<br>&#125;, []);<br><span class="hljs-built_in">console</span>.log(result); <span class="hljs-comment">// [1, 2, 3, 4, 5]</span><br></code></pre></div></td></tr></table></figure><h4 id="多维数组转一维数组"><a href="#多维数组转一维数组" class="headerlink" title="多维数组转一维数组"></a>多维数组转一维数组</h4><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> arr = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>],<br>    [<span class="hljs-number">6</span>, <span class="hljs-number">7</span>, [<span class="hljs-number">8</span>, <span class="hljs-number">9</span>]]<br>];<br><span class="hljs-keyword">let</span> _concat;<br><span class="hljs-keyword">const</span> getResult = <span class="hljs-function">(<span class="hljs-params">arr</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> arr.reduce(<span class="hljs-function">(<span class="hljs-params">prev, next</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Array</span>.isArray(next)) &#123;<br>            _concat = getResult(next);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            _concat = next;<br>        &#125;<br>        <span class="hljs-keyword">return</span> prev.concat(_concat);;<br>    &#125;, [])<br>&#125;;<br><span class="hljs-built_in">console</span>.log(getResult(arr)); <span class="hljs-comment">//  [1, 2, 3, 4, 5, 6, 7, 8, 9]</span><br></code></pre></div></td></tr></table></figure><h4 id="对象属性求和"><a href="#对象属性求和" class="headerlink" title="对象属性求和"></a>对象属性求和</h4><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> shops = [&#123;<br>    title: <span class="hljs-string">&quot;牙膏&quot;</span>,<br>    price: <span class="hljs-number">18</span>,<br>    count: <span class="hljs-number">2</span><br>&#125;, &#123;<br>    title: <span class="hljs-string">&quot;牙刷&quot;</span>,<br>    price: <span class="hljs-number">15</span>,<br>    count: <span class="hljs-number">4</span><br>&#125;, &#123;<br>    title: <span class="hljs-string">&quot;香皂&quot;</span>,<br>    price: <span class="hljs-number">8</span>,<br>    count: <span class="hljs-number">1</span><br>&#125;];<br><span class="hljs-keyword">const</span> totalPrice = shops.reduce(<span class="hljs-function">(<span class="hljs-params">prev, next</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> prev + next.price * next.count<br>&#125;, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">console</span>.log(totalPrice); <span class="hljs-comment">// 104</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>es5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Array操作方法</title>
    <link href="/blog/2020/03/11/Array-action/"/>
    <url>/blog/2020/03/11/Array-action/</url>
    
    <content type="html"><![CDATA[<h2 id="一-获取数组交集-差集"><a href="#一-获取数组交集-差集" class="headerlink" title="一.获取数组交集-差集"></a>一.获取数组交集-差集</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">// 定义两个数组</span><br><span class="hljs-keyword">const</span> arrA = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>];<br><span class="hljs-keyword">const</span> arrB = [<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>];<br></code></pre></div></td></tr></table></figure><h3 id="获取交集"><a href="#获取交集" class="headerlink" title="获取交集"></a>获取交集</h3><h4 id="方式一：filter-some"><a href="#方式一：filter-some" class="headerlink" title="方式一：filter+some"></a>方式一：filter+some</h4><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> intersection = arrA.filter(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> arrB.some(<span class="hljs-function"><span class="hljs-params">item2</span> =&gt;</span> item2 === item)));<br><span class="hljs-built_in">console</span>.log(intersection); <span class="hljs-comment">// [2, 3, 4, 5, 6, 7]</span><br></code></pre></div></td></tr></table></figure><h4 id="方式二：-es6的Set-filter"><a href="#方式二：-es6的Set-filter" class="headerlink" title="方式二： es6的Set+filter"></a>方式二： es6的Set+filter</h4><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> setArrA = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(arrA);<br><span class="hljs-keyword">const</span> setArrB = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(arrB);<br><span class="hljs-keyword">const</span> intersection2 = [...new <span class="hljs-built_in">Set</span>([...setArrA].filter(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> setArrB.has(item)))];<br><span class="hljs-built_in">console</span>.log(intersection2); <span class="hljs-comment">// [2, 3, 4, 5, 6, 7]</span><br></code></pre></div></td></tr></table></figure><h3 id="获取差集"><a href="#获取差集" class="headerlink" title="获取差集"></a>获取差集</h3><h4 id="方式一：es6的Set-filter"><a href="#方式一：es6的Set-filter" class="headerlink" title="方式一：es6的Set+filter"></a>方式一：es6的Set+filter</h4><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> setArrA1 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(arrA);<br><span class="hljs-keyword">const</span> setArrB1 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Set</span>(arrB);<br><span class="hljs-keyword">const</span> difference = [...new <span class="hljs-built_in">Set</span>([...[...setArrA1].filter(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> !setArrB1.has(item)),...[...setArrB1].filter(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> !setArrA1.has(item))])];<br><span class="hljs-built_in">console</span>.log(difference); <span class="hljs-comment">// [1, 8, 9]</span><br></code></pre></div></td></tr></table></figure><h4 id="方式二：filter-every"><a href="#方式二：filter-every" class="headerlink" title="方式二：filter+every"></a>方式二：filter+every</h4><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getDifference</span>(<span class="hljs-params">source,target</span>)</span>&#123;<br>   <span class="hljs-keyword">return</span> source.filter(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> target.every(<span class="hljs-function"><span class="hljs-params">item1</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">return</span> item1 !== item<br>        &#125;);<br>    &#125;);<br>&#125;;<br><span class="hljs-keyword">let</span> difference2 = [...getDifference(arrA,arrB),...getDifference(arrB,arrA)];<br><span class="hljs-built_in">console</span>.log(difference2); <span class="hljs-comment">// [1, 8, 9]</span><br></code></pre></div></td></tr></table></figure><h2 id="二-数组去重"><a href="#二-数组去重" class="headerlink" title="二.数组去重"></a>二.数组去重</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">// 定义一个含有重复值的数组</span><br><span class="hljs-keyword">const</span> repeatArr = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>];<br></code></pre></div></td></tr></table></figure><h3 id="方式一：es6的Set方法"><a href="#方式一：es6的Set方法" class="headerlink" title="方式一：es6的Set方法"></a>方式一：es6的Set方法</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> noRepeatArr1 = [...new <span class="hljs-built_in">Set</span>(repeatArr)];<br><span class="hljs-built_in">console</span>.log(noRepeatArr1); <span class="hljs-comment">// [1, 2, 3]</span><br></code></pre></div></td></tr></table></figure><h3 id="方式二：forEach-空数组-indexOf"><a href="#方式二：forEach-空数组-indexOf" class="headerlink" title="方式二：forEach + 空数组 + indexOf"></a>方式二：forEach + 空数组 + indexOf</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> noRepeatArr2 = [];<br>repeatArr.forEach(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(noRepeatArr2.indexOf(item) === -<span class="hljs-number">1</span>) noRepeatArr2.push(item);<br>&#125;);<br><span class="hljs-built_in">console</span>.log(noRepeatArr2); <span class="hljs-comment">// [1, 2, 3]</span><br></code></pre></div></td></tr></table></figure><h3 id="方式三：reduce-空数组-indexOf"><a href="#方式三：reduce-空数组-indexOf" class="headerlink" title="方式三：reduce + 空数组 + indexOf"></a>方式三：reduce + 空数组 + indexOf</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> noRepeatArr3= repeatArr.reduce(<span class="hljs-function">(<span class="hljs-params">prev,next</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(prev.indexOf(next) === -<span class="hljs-number">1</span>) prev.push(next);<br>    <span class="hljs-keyword">return</span> prev;<br>&#125;,[]);<br><span class="hljs-built_in">console</span>.log(noRepeatArr3); <span class="hljs-comment">// [1, 2, 3];</span><br></code></pre></div></td></tr></table></figure><h3 id="方式四：for循环-includes"><a href="#方式四：for循环-includes" class="headerlink" title="方式四：for循环 + includes"></a>方式四：for循环 + includes</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> noRepeatArr4 = [];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; repeatArr.length; i++ )&#123;<br>     <span class="hljs-keyword">if</span>(!noRepeatArr3.includes(repeatArr[i])) noRepeatArr3.push(repeatArr[i]);<br>&#125;;<br><span class="hljs-built_in">console</span>.log(noRepeatArr4); <span class="hljs-comment">// [1, 2, 3];</span><br></code></pre></div></td></tr></table></figure><h3 id="方式五：es6的Map"><a href="#方式五：es6的Map" class="headerlink" title="方式五：es6的Map"></a>方式五：es6的Map</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> noRepeatArr5 = [];<br><span class="hljs-keyword">let</span> map = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; repeatArr.length; i++)&#123;<br>    <span class="hljs-keyword">if</span> (map.has(repeatArr[i])) &#123;      <span class="hljs-comment">// 判断是否存在该key值</span><br>      map.set(repeatArr[i], <span class="hljs-literal">true</span>);<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>      map.set(repeatArr[i], <span class="hljs-literal">false</span>);<br>      noRepeatArr5.push(repeatArr[i]);<br>    &#125;<br>&#125;;<br><span class="hljs-built_in">console</span>.log(noRepeatArr5); <span class="hljs-comment">// [1, 2, 3];</span><br></code></pre></div></td></tr></table></figure><h2 id="三-数组值求和"><a href="#三-数组值求和" class="headerlink" title="三.数组值求和"></a>三.数组值求和</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">// 定义一个全部值为数字类型的数组</span><br><span class="hljs-keyword">const</span> nums = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>];<br></code></pre></div></td></tr></table></figure><h3 id="方式一：for循环-为0的初始值"><a href="#方式一：for循环-为0的初始值" class="headerlink" title="方式一：for循环+为0的初始值"></a>方式一：for循环+为0的初始值</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> sum1 = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; nums.length;i++)&#123;<br>  sum1 += nums[i];<br>&#125;;<br><span class="hljs-built_in">console</span>.log(sum1); <span class="hljs-comment">// 15</span><br></code></pre></div></td></tr></table></figure><h3 id="方式二：reduce方法"><a href="#方式二：reduce方法" class="headerlink" title="方式二：reduce方法"></a>方式二：reduce方法</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> sum2 = nums.reduce(<span class="hljs-function">(<span class="hljs-params">prev,next</span>) =&gt;</span> &#123;<br>  prev+=next;<br>  <span class="hljs-keyword">return</span> prev;<br>&#125;,<span class="hljs-number">0</span>);<br><span class="hljs-built_in">console</span>.log(sum2); <span class="hljs-comment">// 15</span><br></code></pre></div></td></tr></table></figure><h3 id="方式三：递归"><a href="#方式三：递归" class="headerlink" title="方式三：递归"></a>方式三：递归</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sum3Fn</span> (<span class="hljs-params">arr</span>) </span>&#123;<br>  <span class="hljs-keyword">let</span> len = arr.length;<br>  <span class="hljs-keyword">if</span>(len === <span class="hljs-number">0</span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (len === <span class="hljs-number">1</span>)&#123;<br>    <span class="hljs-keyword">return</span> arr[<span class="hljs-number">0</span>]<br>  &#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">return</span> arr[<span class="hljs-number">0</span>] + sum3Fn(arr.slice(<span class="hljs-number">1</span>));<br>  &#125;<br>&#125;;<br><span class="hljs-keyword">const</span> sum3 = sum3Fn(nums); <span class="hljs-comment">// 15</span><br></code></pre></div></td></tr></table></figure><h3 id="方式四：eval"><a href="#方式四：eval" class="headerlink" title="方式四：eval"></a>方式四：eval</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> sum4 = <span class="hljs-built_in">eval</span>(nums.join(<span class="hljs-string">&quot;+&quot;</span>));<br><span class="hljs-keyword">const</span> sum3 = sum3Fn(nums); <span class="hljs-comment">// 15</span><br></code></pre></div></td></tr></table></figure><h2 id="四-数组排序"><a href="#四-数组排序" class="headerlink" title="四.数组排序"></a>四.数组排序</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> sorts = [<span class="hljs-number">12</span>,<span class="hljs-number">11</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">8</span>,<span class="hljs-number">3</span>,<span class="hljs-number">0</span>];<br></code></pre></div></td></tr></table></figure><h3 id="方式一：冒泡排序"><a href="#方式一：冒泡排序" class="headerlink" title="方式一：冒泡排序"></a>方式一：冒泡排序</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> sorts1 = sorts;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; sorts1.length; i++)&#123;<br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; sorts1.length; j++)&#123;<br>    <span class="hljs-keyword">if</span>(sorts1[j] &gt; sorts1[j+<span class="hljs-number">1</span>])&#123;<br>      <span class="hljs-keyword">let</span> temp  = sorts1[j];<br>      sorts1[j] = sorts1[j +<span class="hljs-number">1</span>];<br>      sorts1[j +<span class="hljs-number">1</span>] = temp;<br>    &#125;<br>  &#125;;<br>&#125;;<br><span class="hljs-built_in">console</span>.log(sorts1); <span class="hljs-comment">// [0, 3, 4, 7, 8, 11, 12]</span><br></code></pre></div></td></tr></table></figure><h3 id="方式二：选择排序"><a href="#方式二：选择排序" class="headerlink" title="方式二：选择排序"></a>方式二：选择排序</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> sorts2 = sorts;<br><span class="hljs-keyword">let</span> temp;<span class="hljs-comment">//交换变量标识</span><br><span class="hljs-comment">// 两层for分别表示当前项与第二项</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; sorts2.length - <span class="hljs-number">1</span>; i++) &#123;<br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j = i + <span class="hljs-number">1</span>; j &lt; sorts2.length; j++) &#123;<br>  <span class="hljs-comment">// 假设第二项是最小值(是则交换/否则继续比较)</span><br>    <span class="hljs-keyword">if</span>(sorts2[i] &gt; sorts2[j]) &#123;<br>      temp = sorts2[i];<br>      sorts2[i] = sorts2[j];<br>      sorts2[j] = temp;<br>    &#125;<br>  &#125;<br>&#125;<br><span class="hljs-built_in">console</span>.log(sorts2); <span class="hljs-comment">// [0, 3, 4, 7, 8, 11, 12]</span><br></code></pre></div></td></tr></table></figure><h3 id="方式三：插入排序"><a href="#方式三：插入排序" class="headerlink" title="方式三：插入排序"></a>方式三：插入排序</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> sorts3 = sorts;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; sorts3.length; i++) &#123;<br> <span class="hljs-keyword">var</span> n = i;<br> <span class="hljs-keyword">while</span>(sorts3[n] &gt; sorts3[n+<span class="hljs-number">1</span>] &amp;&amp; n &gt;= <span class="hljs-number">0</span>) &#123;<br>     <span class="hljs-keyword">let</span> temp = sorts3[n];<br>     sorts3[n] = sorts3[n+<span class="hljs-number">1</span>];<br>     sorts3[n+<span class="hljs-number">1</span>] = temp;<br>     n--;<br>  &#125;;<br>&#125;;<br><span class="hljs-built_in">console</span>.log(sorts3); <span class="hljs-comment">// [0, 3, 4, 7, 8, 11, 12]</span><br></code></pre></div></td></tr></table></figure><h3 id="方式四：sort排序"><a href="#方式四：sort排序" class="headerlink" title="方式四：sort排序"></a>方式四：sort排序</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> sorts4= sorts;<br>sorts4.sort(<span class="hljs-function">(<span class="hljs-params">a,b</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> a-b;<br>&#125;);<br><span class="hljs-built_in">console</span>.log(sorts4); <span class="hljs-comment">// [0, 3, 4, 7, 8, 11, 12]</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pm2-进程管理器</title>
    <link href="/blog/2020/02/05/pm2/"/>
    <url>/blog/2020/02/05/pm2/</url>
    
    <content type="html"><![CDATA[<blockquote><p>官方说明：PM2 is a daemon process manager that will help you manage and keep your application online<br>官方说明：PM2是一个守护进程管理器，可以帮助您管理和保持应用程序在线</p><blockquote><p>pm2是node项目的进程、状态管理器</p></blockquote></blockquote><h3 id="1-安装nodejs"><a href="#1-安装nodejs" class="headerlink" title="1.安装nodejs"></a>1.安装nodejs</h3><p><a href="https://www.zhaoxinchuan.cn/blog/2021/10/25/nodejs">nodejs安装</a></p><h3 id="2-查看nodejs、npm版本"><a href="#2-查看nodejs、npm版本" class="headerlink" title="2.查看nodejs、npm版本"></a>2.查看nodejs、npm版本</h3><figure class="highlight crmsh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br>npm -v<br></code></pre></div></td></tr></table></figure><hr><h3 id="3-安装pm2"><a href="#3-安装pm2" class="headerlink" title="3.安装pm2"></a>3.安装pm2</h3><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">npm</span> install -g pm<span class="hljs-number">2</span><br></code></pre></div></td></tr></table></figure><h4 id="3-1-查看是否安装成功"><a href="#3-1-查看是否安装成功" class="headerlink" title="3.1.查看是否安装成功"></a>3.1.查看是否安装成功</h4><figure class="highlight gcode"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gcode">p<span class="hljs-name">m2</span> list<br></code></pre></div></td></tr></table></figure><p><img src="https://qiniu.zhaoxinchuan.cn/pm2/1.png" alt="pm2-list"></p><h4 id="3-2-启动node项目"><a href="#3-2-启动node项目" class="headerlink" title="3.2.启动node项目"></a>3.2.启动node项目</h4><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">pm2 start 项目路径<br>pm2 start root<span class="hljs-regexp">/webapp/</span>server<span class="hljs-regexp">/bin/</span>www<br></code></pre></div></td></tr></table></figure><h4 id="3-3-查看进程状态"><a href="#3-3-查看进程状态" class="headerlink" title="3.3.查看进程状态"></a>3.3.查看进程状态</h4><figure class="highlight fortran"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs fortran">pm2 <span class="hljs-keyword">status</span><br></code></pre></div></td></tr></table></figure><p><img src="https://qiniu.zhaoxinchuan.cn/pm2/3.png" alt="pm2-logs-name"></p><h4 id="3-4-查看指定文件的日志"><a href="#3-4-查看指定文件的日志" class="headerlink" title="3.4.查看指定文件的日志"></a>3.4.查看指定文件的日志</h4><figure class="highlight gcode"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gcode">p<span class="hljs-name">m2</span> logs www<br></code></pre></div></td></tr></table></figure><p><img src="https://qiniu.zhaoxinchuan.cn/pm2/2.png" alt="pm2-logs-name"></p><hr><h1 id="4-pm2-常用命令"><a href="#4-pm2-常用命令" class="headerlink" title="4.pm2 常用命令"></a>4.pm2 常用命令</h1><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">pm2 list <span class="hljs-comment">// 查看所有进程状态</span><br>pm2 logs <span class="hljs-comment">// 显示所有进程日志</span><br>pm2 stop all <span class="hljs-comment">// 停止所有进程</span><br>pm2 restart all <span class="hljs-comment">// 重启所有进程</span><br>pm2 reload all <span class="hljs-comment">// 重载所有进程</span><br>pm2 <span class="hljs-keyword">delete</span> all  <span class="hljs-comment">// 删除所有进程</span><br>pm2 restart [name] <span class="hljs-comment">// 重启指定进程[对应进程的名称]</span><br>pm2 stop [name] <span class="hljs-comment">// 停止指定进程[对应进程的名称]</span><br>pm2 <span class="hljs-keyword">delete</span> [name]  <span class="hljs-comment">// 删除指定进程[对应进程的名称]</span><br>pm2 logs [name]  <span class="hljs-comment">// 查看指定进程的日志[对应进程的名称]</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Node</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
      <tag>centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在项目中如何安装配置和使用babel</title>
    <link href="/blog/2020/01/23/babel/"/>
    <url>/blog/2020/01/23/babel/</url>
    
    <content type="html"><![CDATA[<h3 id="1-在项目下初始化-package-json"><a href="#1-在项目下初始化-package-json" class="headerlink" title="1.在项目下初始化 package.json"></a>1.在项目下初始化 package.json</h3><figure class="highlight coffeescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> init<br></code></pre></div></td></tr></table></figure><h3 id="2-在项目中安装babel"><a href="#2-在项目中安装babel" class="headerlink" title="2.在项目中安装babel"></a>2.在项目中安装babel</h3><figure class="highlight mipsasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span><span class="hljs-keyword">babel-cli </span>--save-dev<br></code></pre></div></td></tr></table></figure><h3 id="3-安装babel插件"><a href="#3-安装babel插件" class="headerlink" title="3.安装babel插件"></a>3.安装babel插件</h3><figure class="highlight mipsasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span><span class="hljs-keyword">babel-preset-xxxxxx </span>--save-dev<br></code></pre></div></td></tr></table></figure><p><font color=red>Babel5是默认包含各种转换插件，Babel6.x相关转换插件需要下载对应的插件，如果不去安装这些插件，那么在命令行进行转换时是不会有任何效果的.下面以安装es2015举例</font></p><figure class="highlight mipsasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span><span class="hljs-keyword">babel-preset-es2015 </span>--save-dev<br></code></pre></div></td></tr></table></figure><h3 id="4-配置文件-babelrc"><a href="#4-配置文件-babelrc" class="headerlink" title="4.配置文件.babelrc"></a>4.配置文件.babelrc</h3><figure class="highlight prolog"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs prolog">把所使使用的插件对应的规则加入.babelrc。<br>&#123;<br>  <span class="hljs-string">&quot;presets&quot;</span>: [<span class="hljs-string">&quot;es2015&quot;</span>],<br>　<span class="hljs-string">&quot;plugins&quot;</span>: [<span class="hljs-string">&quot;transform-es2015-arrow-functions&quot;</span>]<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="5-配置presets"><a href="#5-配置presets" class="headerlink" title="5.配置presets:"></a>5.配置presets:</h3><h4 id="a-es2015"><a href="#a-es2015" class="headerlink" title="a.es2015"></a>a.es2015</h4><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">check-es2015-constants <span class="hljs-regexp">//</span> 检验const常量是否被重新赋值<br><br>transform-es2015-arrow-functions <span class="hljs-regexp">//</span> 编译箭头函数<br><br>transform-es2015-block-scoped-functions <span class="hljs-regexp">//</span> 函数声明在作用域内<br><br>transform-es2015-block-scoping <span class="hljs-regexp">//</span> 编译const和let<br><br>transform-es2015-classes <span class="hljs-regexp">//</span> 编译class<br><br>transform-es2015-computed-properties <span class="hljs-regexp">//</span> 编译计算对象属性<br><br>transform-es2015-destructuring <span class="hljs-regexp">//</span> 编译解构赋值<br><br>transform-es2015-duplicate-keys <span class="hljs-regexp">//</span> 编译对象中重复的key，其实是转换成计算对象属性<br><br>transform-es2015-<span class="hljs-keyword">for</span>-of <span class="hljs-regexp">//</span> 编译<span class="hljs-keyword">for</span>…of<br><br>transform-es2015-<span class="hljs-keyword">function</span>-name <span class="hljs-regexp">//</span> 将<span class="hljs-keyword">function</span>.name语义应用于所有的<span class="hljs-keyword">function</span><br><br>transform-es2015-literals <span class="hljs-regexp">//</span> 编译整数(<span class="hljs-number">8</span>进制/<span class="hljs-number">16</span>进制)和unicode<br><br>transform-es2015-modules-commonjs <span class="hljs-regexp">//</span> 将modules编译成commonjs<br><br>transform-es2015-object-super <span class="hljs-regexp">//</span> 编译super<br><br>transform-es2015-parameters <span class="hljs-regexp">//</span> 编译参数，包括默认参数，不定参数和解构参数<br><br>transform-es2015-shorthand-properties <span class="hljs-regexp">//</span> 编译属性缩写<br><br>transform-es2015-spread <span class="hljs-regexp">//</span> 编译展开运算符<br><br>transform-es2015-sticky-regex <span class="hljs-regexp">//</span> 正则添加sticky属性<br><br>transform-es2015-template-literals <span class="hljs-regexp">//</span> 编译模版字符串<br><br>transform-es2015-typeof-symbol <span class="hljs-regexp">//</span> 编译Symbol类型<br><br>transform-es2015-unicode-regex <span class="hljs-regexp">//</span> 正则添加unicode模式<br><br>transform-regenerator <span class="hljs-regexp">//</span> 编译generator函数<br></code></pre></div></td></tr></table></figure><h4 id="b-es2016"><a href="#b-es2016" class="headerlink" title="b.es2016"></a>b.es2016</h4><figure class="highlight arduino"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs arduino">transform-exponentiation-<span class="hljs-keyword">operator</span> <span class="hljs-comment">// 编译幂运算符</span><br></code></pre></div></td></tr></table></figure><h4 id="c-es2017"><a href="#c-es2017" class="headerlink" title="c.es2017"></a>c.es2017</h4><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk">syntax-trailing-<span class="hljs-keyword">function</span>-commas <span class="hljs-regexp">//</span> <span class="hljs-keyword">function</span>最后一个参数允许使用逗号<br><br>transform-async-to-generator <span class="hljs-regexp">//</span> 把async函数转化成generator函数<br></code></pre></div></td></tr></table></figure><h4 id="d-latest-latest是一个特殊的presets，到目前为止包括了es2015，es2016，es2017的插件。"><a href="#d-latest-latest是一个特殊的presets，到目前为止包括了es2015，es2016，es2017的插件。" class="headerlink" title="d.latest:latest是一个特殊的presets，到目前为止包括了es2015，es2016，es2017的插件。"></a>d.latest:latest是一个特殊的presets，到目前为止包括了es2015，es2016，es2017的插件。</h4><h4 id="e-react-加入了flow，jsx等语法"><a href="#e-react-加入了flow，jsx等语法" class="headerlink" title="e.react:加入了flow，jsx等语法."></a>e.react:加入了flow，jsx等语法.</h4><h4 id="f-stage-x-stage-0-1-2-3-4-按照JavaScript的提案阶段区分的，一共有5个阶段。而数字越小-阶段越靠后"><a href="#f-stage-x-stage-0-1-2-3-4-按照JavaScript的提案阶段区分的，一共有5个阶段。而数字越小-阶段越靠后" class="headerlink" title="f.stage-x(stage-0/1/2/3/4):按照JavaScript的提案阶段区分的，一共有5个阶段。而数字越小,阶段越靠后."></a>f.stage-x(stage-0/1/2/3/4):按照JavaScript的提案阶段区分的，一共有5个阶段。而数字越小,阶段越靠后.</h4><h3 id="6-配置plugins"><a href="#6-配置plugins" class="headerlink" title="6.配置plugins"></a>6.配置plugins</h3><p>引入需要的插件,以下仅以引入箭头函数举例</p><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;plugins&quot;</span>: [<span class="hljs-string">&quot;transform-es2015-arrow-functions&quot;</span>]<br>&#125;<br></code></pre></div></td></tr></table></figure><p>另外babel还支持自定义presets 和 plugins.<br>完成以上配置就安装好babel了, 可以使用以下的babel的命令进行编译了</p><h4 id="6-1-在当前命令行输出转换"><a href="#6-1-在当前命令行输出转换" class="headerlink" title="6.1.在当前命令行输出转换"></a>6.1.在当前命令行输出转换</h4><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">babel</span> test<span class="hljs-number">1</span>.js<br></code></pre></div></td></tr></table></figure><h4 id="6-2-将转换后的js输出到指定文件中（使用-o-或-–out-file-）"><a href="#6-2-将转换后的js输出到指定文件中（使用-o-或-–out-file-）" class="headerlink" title="6.2.将转换后的js输出到指定文件中（使用 -o 或 –out-file ）"></a>6.2.将转换后的js输出到指定文件中（使用 -o 或 –out-file ）</h4><figure class="highlight stylus"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs stylus">babel <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.js</span> -o <span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.js</span> <br><span class="hljs-comment">// 或者</span><br>babel <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.js</span> --out-file <span class="hljs-selector-tag">b</span>.js<br></code></pre></div></td></tr></table></figure><h4 id="6-3-实时监控（使用-w-或-–watch-）"><a href="#6-3-实时监控（使用-w-或-–watch-）" class="headerlink" title="6.3.实时监控（使用 -w 或 –watch ）"></a>6.3.实时监控（使用 -w 或 –watch ）</h4><figure class="highlight stylus"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs stylus">babel <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.js</span> -w --out-file <span class="hljs-selector-tag">b</span>.js<br><span class="hljs-comment">// 或者</span><br>babel <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.js</span> --watch --out-file <span class="hljs-selector-tag">b</span>.js<br></code></pre></div></td></tr></table></figure><h4 id="6-4-编译文件夹并输出到文件夹中（使用-d-或-–out-dir-）"><a href="#6-4-编译文件夹并输出到文件夹中（使用-d-或-–out-dir-）" class="headerlink" title="6.4.编译文件夹并输出到文件夹中（使用 -d 或 –out-dir ）"></a>6.4.编译文件夹并输出到文件夹中（使用 -d 或 –out-dir ）</h4><figure class="highlight crystal"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs crystal">babel src -d <span class="hljs-class"><span class="hljs-keyword">lib</span></span><br>/<span class="hljs-regexp">/ 或者</span><br><span class="hljs-regexp">babel src --out-dir lib</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>babel</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>webpack</title>
    <link href="/blog/2020/01/05/webpack/"/>
    <url>/blog/2020/01/05/webpack/</url>
    
    <content type="html"><![CDATA[<h2 id="安装要使用的包"><a href="#安装要使用的包" class="headerlink" title="安装要使用的包"></a>安装要使用的包</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">npm install webpack webpack-cli -s<br>  或<br>yarn add webpack webpack-cli -s<br></code></pre></div></td></tr></table></figure><hr><h2 id="如果使用全局-cli-命令，可以全局安装-webpack-cli"><a href="#如果使用全局-cli-命令，可以全局安装-webpack-cli" class="headerlink" title="如果使用全局 cli 命令，可以全局安装 webpack-cli"></a>如果使用全局 cli 命令，可以全局安装 webpack-cli</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">npm install webpack-cli -g<br>    或<br>yarn add <span class="hljs-built_in">global</span> webpack-cli<br></code></pre></div></td></tr></table></figure><hr><h2 id="配置文件创建"><a href="#配置文件创建" class="headerlink" title="配置文件创建"></a>配置文件创建</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>在项目根目录创建：webpack.config.js</p><p><font color=red bgcolor=red size=4>entry–&gt;</font>文件入口；<br><font color=red size=4>output–&gt;</font></span>文件出口；<br><font color=red size=4>module–&gt;</font></span>模块依赖；<br><font color=red size=4>plugin–&gt;</font></span>插件配置；</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;path&quot;</span>);<br><span class="hljs-built_in">module</span>.exports = &#123;<br>  entry: <span class="hljs-string">&quot;./src/index.js&quot;</span>, <span class="hljs-comment">// String || Object 可以写单个或者多个入口文件</span><br>  output: &#123;<br>    <span class="hljs-comment">// 出口</span><br>    path: path.resolve(__dirname, <span class="hljs-string">&quot;dist&quot;</span>),<br>    filename: <span class="hljs-string">&quot;[name][hash:8].js&quot;</span>,<br>  &#125;,<br>  <span class="hljs-built_in">module</span>： &#123;&#125;,<br>  plugin: []<br>&#125;;<br></code></pre></div></td></tr></table></figure><h3 id="命令行配置"><a href="#命令行配置" class="headerlink" title="命令行配置"></a>命令行配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">// package.json</span><br><span class="hljs-comment">// 使用命令</span><br><span class="hljs-comment">// npm server || npm build</span><br><span class="hljs-comment">// yarn server || yarn build</span><br><span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br>  <span class="hljs-string">&quot;server&quot;</span>: <span class="hljs-string">&quot;webpack-dev-server&quot;</span>, <span class="hljs-comment">//开发环境 热更新</span><br>  <span class="hljs-string">&quot;build&quot;</span>: <span class="hljs-string">&quot;webpack&quot;</span> <span class="hljs-comment">// 生产环境 打包</span><br>&#125;,<br></code></pre></div></td></tr></table></figure><h2 id="ES6-转-ES5"><a href="#ES6-转-ES5" class="headerlink" title="ES6 转 ES5"></a>ES6 转 ES5</h2><h3 id="ES6-转-ES5-module-babel-loader-babel-core-babel-preset-env"><a href="#ES6-转-ES5-module-babel-loader-babel-core-babel-preset-env" class="headerlink" title="ES6 转 ES5 (module: babel-loader,@babel/core,@babel/preset-env)"></a>ES6 转 ES5 (module: babel-loader,@babel/core,@babel/preset-env)</h3><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">command:<br>  npm install babel-loader @babel/core @babel/preset-env -D<br>    或<br>  yarn add babel-loader @babel/core @babel/preset-env -D<br><br>code:<br>  <span class="hljs-built_in">module</span>: &#123;<br>    rules: [<br>      &#123;<br>        test: <span class="hljs-regexp">/\.js$/</span>,   <span class="hljs-comment">// 匹配 .js后缀的文件</span><br>        use: <span class="hljs-string">&quot;babel-loader&quot;</span>, <span class="hljs-comment">// 使用babel-loader</span><br>        exclude: <span class="hljs-regexp">/node_modules/</span>,  <span class="hljs-comment">// 排除node_modules中的js文件</span><br>      &#125;<br>    ]<br>  &#125;<br></code></pre></div></td></tr></table></figure><h3 id="在项目根目录-与-webpack-config-js-同级-创建文件-babelrc"><a href="#在项目根目录-与-webpack-config-js-同级-创建文件-babelrc" class="headerlink" title="在项目根目录(与 webpack.config.js 同级)创建文件 .babelrc"></a>在项目根目录(与 webpack.config.js 同级)创建文件 .babelrc</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&#123;<br>  <span class="hljs-string">&quot;presets&quot;</span>: [[<span class="hljs-string">&quot;@babel/preset-env&quot;</span>]],<br>  <span class="hljs-string">&quot;plugins&quot;</span>: []<br>&#125;<br><br></code></pre></div></td></tr></table></figure><hr><h2 id="css-打包处理"><a href="#css-打包处理" class="headerlink" title="css 打包处理"></a>css 打包处理</h2><h3 id="loader"><a href="#loader" class="headerlink" title="loader:"></a>loader:</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">command:<br>  npm install style-loader css-loader -D<br>    或<br>  yarn add style-loader css-loader -D<br>code:<br>  <span class="hljs-built_in">module</span>: &#123;<br>    rules: [<br>      &#123;<br>        test: <span class="hljs-regexp">/\.css$/</span>,<br>        use: [<span class="hljs-string">&quot;style-loader&quot;</span>, <span class="hljs-string">&quot;css-loader&quot;</span>],<br>      &#125;,<br>    ]<br>  &#125;<br></code></pre></div></td></tr></table></figure><h3 id="less-处理"><a href="#less-处理" class="headerlink" title="less 处理"></a>less 处理</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">command:<br>  npm install less-loader -D<br>    或<br>  yarn add less-loader -D<br>code:<br>  <span class="hljs-built_in">module</span>: &#123;<br>    rules: [<br>      &#123;<br>        test: <span class="hljs-regexp">/\.less$/</span>,<br>        use: [<span class="hljs-string">&quot;style-loader&quot;</span>, <span class="hljs-string">&quot;css-loader&quot;</span>,<span class="hljs-string">&quot;less-loader&quot;</span>],<br>      &#125;,<br>    ]<br>  &#125;<br></code></pre></div></td></tr></table></figure><h3 id="sass-处理"><a href="#sass-处理" class="headerlink" title="sass 处理"></a>sass 处理</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">command:<br>  npm install sass-loader node-sass -D<br>    或<br>  yarn add sass-loader node-sass -D<br>code:<br>  <span class="hljs-built_in">module</span>: &#123;<br>    rules: [<br>      &#123;<br>        test: <span class="hljs-regexp">/\.less$/</span>,<br>        use: [<span class="hljs-string">&quot;style-loader&quot;</span>, <span class="hljs-string">&quot;css-loader&quot;</span>,<span class="hljs-string">&quot;sass-loader&quot;</span>],<br>      &#125;,<br>    ]<br>  &#125;<br></code></pre></div></td></tr></table></figure><h3 id="处理后产生的问题"><a href="#处理后产生的问题" class="headerlink" title="处理后产生的问题"></a>处理后产生的问题</h3><p>打包后,由于 css 文件是以字符串的形式存在于打包后的 js 文件中,当网络不畅时/或打出的包文件过大的时候,页面的样式不会一下子加载出来,导致页面只渲染出了 dom 结构,没有渲染出样式.</p><p>解决方法：</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">npm install mini-css-extract-plugin -D<br>  或<br>yarn add mini-css-extract-plugin -D<br></code></pre></div></td></tr></table></figure><p>使用方式：</p><p>webpack.config.js 头部引入当前包</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> MiniCssExtractPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mini-css-extract-plugin&quot;</span>);<br><span class="hljs-comment">// 修改 module -&gt; rules -&gt; /\.css$/ 中的 use</span><br><span class="hljs-built_in">module</span>: &#123;<br>  rules: [<br>    &#123;<br>      test: <span class="hljs-regexp">/\.css$/</span>,<br>      use: [MiniCssExtractPlugin.loader, <span class="hljs-string">&quot;css-loader&quot;</span>], <span class="hljs-comment">// 使用MiniCssExtractPlugin的loader</span><br>    &#125;,<br>  ];<br>&#125;<br><span class="hljs-comment">// plugin配置</span><br>plugin: [<br>  <span class="hljs-keyword">new</span> MiniCssExtractPlugin(&#123;<br>    filename: <span class="hljs-string">&quot;style.css&quot;</span>, <span class="hljs-comment">// 重命名</span><br>  &#125;),<br>];<br></code></pre></div></td></tr></table></figure><h2 id="图片打包处理"><a href="#图片打包处理" class="headerlink" title="图片打包处理"></a>图片打包处理</h2><h3 id="使用的包"><a href="#使用的包" class="headerlink" title="使用的包"></a>使用的包</h3><font color=red>  这里推荐使用<font color=pink>url-loader</font>,因为<font color=pink>url-loader</font>封装了<font color=pink>file-loader</font>,当图片大小小于options中的limit参数时,会把图片数据转换成base64字符串,如果大于limit参数时,使用file-loader加载图片</font><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">npm install url-loader -D<br>  或者<br>yarn add url-loader -D<br></code></pre></div></td></tr></table></figure><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">module</span>: &#123;<br>  rules: [<br>    &#123;<br>      test: <span class="hljs-regexp">/\.(png|jpg|jpeg)$/</span>,<br>      use: &#123;<br>        loader: <span class="hljs-string">&quot;url-loader&quot;</span>,<br>        options: &#123;<br>          limit: <span class="hljs-number">4096</span>, <span class="hljs-comment">// 图片大小上限4kb</span><br>        &#125;,<br>      &#125;,<br>    &#125;,<br>  ];<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>webpack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue</title>
    <link href="/blog/2019/10/26/vue/"/>
    <url>/blog/2019/10/26/vue/</url>
    
    <content type="html"><![CDATA[<h3 id="初识-Vue"><a href="#初识-Vue" class="headerlink" title="初识 Vue"></a>初识 Vue</h3><p><a href="https://cn.vuejs.org/">官方文档</a><br>Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。</p><p>打开文档,映入眼帘的就是一句简单的介绍-<font color=green>渐进式 JavaScript 框架</font>,我自己的理解很简单,就是用你想用或者能用的功能特性，你不想用的部分功能可以先不用。Vue 不强求你一次性接受并使用它的全部功能特性。</p><h3 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>初识Vue-Hello world<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-comment">/* 由于js未加载完成,导致vue无法初始化,导致页面闪烁.可以添加 v-cloak 指令,等到初始化完后在进行显示 */</span></span><br><span class="css">    <span class="hljs-selector-attr">[v-cloak]</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">display</span>: none;</span><br>    &#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span> <span class="hljs-attr">v-cloak</span>&gt;</span>&#123;&#123;say&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 引入vue.js --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">      <span class="hljs-comment">// el: 将应用挂载到id为app的dom上,这样在这个dom内的所有元素都可以使用data中的数据</span></span><br><span class="javascript">      <span class="hljs-keyword">let</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">        el: <span class="hljs-string">&quot;#app&quot;</span>,</span><br>        data: &#123;<br><span class="javascript">          say: <span class="hljs-string">&quot;Hello world&quot;</span>,</span><br>        &#125;,<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></div></td></tr></table></figure><hr><h3 id="循环渲染"><a href="#循环渲染" class="headerlink" title="循环渲染"></a>循环渲染</h3><p><strong>css:</strong></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-attr">[v-cloak]</span> &#123;<br>  <span class="hljs-attribute">display</span>: none;<br>&#125;<br><br><span class="hljs-selector-class">.shadow</span> &#123;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">4px</span> <span class="hljs-number">8px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.2</span>), <span class="hljs-number">0</span> <span class="hljs-number">6px</span> <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.19</span>);<br>&#125;<br></code></pre></div></td></tr></table></figure><p><strong>html:</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app1&quot;</span> <span class="hljs-attr">v-cloak</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- ######################### 对象的渲染 start ######################### --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;renderObj shadow&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>对象的渲染<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item,key,index) in renderObj&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;key&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;key === &#x27;name&#x27;&quot;</span>&gt;</span>姓名：&#123;&#123;item&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-else</span>&gt;</span>年龄：&#123;&#123;item&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- ######################### 对象的渲染 end ######################### --&gt;</span><br><br>  <span class="hljs-comment">&lt;!-- ######################### 数组的渲染 start ######################### --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;renderArr shadow&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>数组的渲染<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item,index) in renderArr&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item.id&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- ######################### 数组的渲染 end ######################### --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>js:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> vm1 = <span class="hljs-keyword">new</span> Vue(&#123;<br>  el: <span class="hljs-string">&quot;#app1&quot;</span>,<br>  data: &#123;<br>    renderObj: &#123;<br>      name: <span class="hljs-string">&quot;小明&quot;</span>,<br>      age: <span class="hljs-number">18</span>,<br>    &#125;,<br>    renderArr: [<br>      &#123;<br>        id: <span class="hljs-number">1</span>,<br>        title: <span class="hljs-string">&quot;标题1&quot;</span>,<br>      &#125;,<br>      &#123;<br>        id: <span class="hljs-number">2</span>,<br>        title: <span class="hljs-string">&quot;标题2&quot;</span>,<br>      &#125;,<br>    ],<br>  &#125;,<br>&#125;);<br></code></pre></div></td></tr></table></figure><hr><h3 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><p><strong>html:</strong></p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app2&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;val&quot;</span> /&gt;</span><br>  &#123;&#123;val&#125;&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p><strong>js:</strong></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">let</span> vm2 = <span class="hljs-keyword">new</span> Vue(&#123;<br>  el: <span class="hljs-string">&quot;#app2&quot;</span>,<br>  data: &#123;<br>    val: <span class="hljs-string">&quot;&quot;</span>,<br>  &#125;,<br>&#125;);<br></code></pre></div></td></tr></table></figure><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>demo<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">    <span class="hljs-comment">/* 由于js未加载完成,导致vue无法初始化,导致页面闪烁.可以添加 v-cloak 指令,等到初始化完后在进行显示 */</span></span><br><span class="css">    <span class="hljs-selector-attr">[v-cloak]</span> &#123;</span><br><span class="css">      <span class="hljs-attribute">display</span>: none;</span><br>    &#125;<br><br>    .green &#123;<br><span class="css">      <span class="hljs-attribute">color</span>: green;</span><br>    &#125;<br><br>    .red &#123;<br><span class="css">      <span class="hljs-attribute">color</span>: red;</span><br>    &#125;<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span> <span class="hljs-attr">v-cloak</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">add-fruit</span> <span class="hljs-attr">:fruits</span>=<span class="hljs-string">&quot;fruits&quot;</span> @<span class="hljs-attr">addfruit</span>=<span class="hljs-string">&quot;handleParentAddFruit&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">add-fruit</span>&gt;</span><br>      &lt;check-fruits<br>        :fruits=&quot;fruits&quot;<br>        @parentfruit=&quot;handleParentFruitChange&quot;<br>      &gt;<span class="hljs-tag">&lt;/<span class="hljs-name">check-fruits</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 引入vue.js --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">      <span class="hljs-comment">// 自定义组件-水果列表</span></span><br><span class="javascript">      Vue.component(<span class="hljs-string">&quot;check-fruits&quot;</span>, &#123;</span><br>        template: `<br><span class="handlebars"><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="javascript">          &lt;label  v-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;item in fruits&quot;</span> :key=<span class="hljs-string">&quot;item.id&quot;</span> :<span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;item.checked?&#x27;green&#x27;:&#x27;red&#x27;&quot;</span>&gt;</span><br><span class="handlebars"><span class="xml">            </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">item.name</span>&#125;&#125;</span></span><br><span class="handlebars"><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.id&quot;</span> <span class="hljs-attr">:checked</span>=<span class="hljs-string">&quot;item.checked&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;handleFruitChange(item.id)&quot;</span>/&gt;</span></span></span><br><span class="handlebars"><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>您喜欢的水果：<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span></span></span><br><span class="javascript">            &lt;dd v-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;(item,index) in checkedList&quot;</span> <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;green&quot;</span>&gt;</span><br><span class="handlebars"><span class="xml">              </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">index</span>+<span class="hljs-number">1</span>&#125;&#125;</span><span class="xml">:</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">item.name</span>&#125;&#125;</span><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleFruitChange(item.id)&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br>      `,<br>        props: &#123;<br>          fruits: &#123;<br><span class="javascript">            <span class="hljs-keyword">default</span>: [],</span><br><span class="javascript">            type: <span class="hljs-built_in">Array</span>,</span><br>          &#125;,<br>        &#125;,<br>        methods: &#123;<br><span class="javascript">          <span class="hljs-function"><span class="hljs-title">handleFruitChange</span>(<span class="hljs-params">id</span>)</span> &#123;</span><br><span class="javascript">            <span class="hljs-built_in">this</span>.$emit(<span class="hljs-string">&quot;parentfruit&quot;</span>, id);</span><br>          &#125;,<br>        &#125;,<br>        computed: &#123;<br><span class="javascript">          checkedList: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.fruits.filter(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;</span><br><span class="javascript">              <span class="hljs-keyword">return</span> item.checked;</span><br>            &#125;);<br>          &#125;,<br>        &#125;,<br>      &#125;);<br><span class="javascript">      <span class="hljs-comment">// 自定义组件-添加水果</span></span><br><span class="javascript">      Vue.component(<span class="hljs-string">&quot;add-fruit&quot;</span>, &#123;</span><br>        template: `<br><span class="handlebars"><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">form</span> @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span></span></span><br>            水果名称：<br><span class="handlebars"><span class="xml">            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;name&quot;</span>  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;name&quot;</span>  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入要添加的水果&quot;</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;添加&quot;</span>&gt;</span></span></span><br><span class="handlebars"><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span></span><br>      `,<br>        props: &#123;<br>          fruits: &#123;<br><span class="javascript">            <span class="hljs-keyword">default</span>: [],</span><br><span class="javascript">            type: <span class="hljs-built_in">Array</span>,</span><br>          &#125;,<br>        &#125;,<br><span class="javascript">        data: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">          <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">            name: <span class="hljs-literal">null</span>,</span><br>          &#125;;<br>        &#125;,<br>        methods: &#123;<br><span class="javascript">          <span class="hljs-function"><span class="hljs-title">submit</span>(<span class="hljs-params">e</span>)</span> &#123;</span><br><span class="javascript">            <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.name) <span class="hljs-keyword">return</span>;</span><br><span class="javascript">            <span class="hljs-built_in">this</span>.$emit(<span class="hljs-string">&quot;addfruit&quot;</span>, &#123;</span><br><span class="javascript">              name: <span class="hljs-built_in">this</span>.name,</span><br><span class="javascript">              id: <span class="hljs-built_in">this</span>.fruits.length + <span class="hljs-number">1</span>,</span><br><span class="javascript">              checked: <span class="hljs-literal">false</span>,</span><br>            &#125;);<br><span class="javascript">            <span class="hljs-built_in">this</span>.name = <span class="hljs-literal">null</span>;</span><br>            e.preventDefault();<br>          &#125;,<br>        &#125;,<br>      &#125;);<br><span class="javascript">      <span class="hljs-comment">// el: 将应用挂载到id为app的dom上,这样在这个dom内的所有元素都可以使用data中的数据</span></span><br><span class="javascript">      <span class="hljs-keyword">let</span> vm = <span class="hljs-keyword">new</span> Vue(&#123;</span><br><span class="javascript">        el: <span class="hljs-string">&quot;#app&quot;</span>,</span><br>        data: &#123;<br>          fruits: [<br>            &#123;<br>              id: 1,<br><span class="javascript">              name: <span class="hljs-string">&quot;苹果&quot;</span>,</span><br><span class="javascript">              checked: <span class="hljs-literal">false</span>,</span><br>            &#125;,<br>            &#123;<br>              id: 2,<br><span class="javascript">              name: <span class="hljs-string">&quot;梨&quot;</span>,</span><br><span class="javascript">              checked: <span class="hljs-literal">false</span>,</span><br>            &#125;,<br>            &#123;<br>              id: 3,<br><span class="javascript">              name: <span class="hljs-string">&quot;枇杷&quot;</span>,</span><br><span class="javascript">              checked: <span class="hljs-literal">true</span>,</span><br>            &#125;,<br>            &#123;<br>              id: 4,<br><span class="javascript">              name: <span class="hljs-string">&quot;樱桃&quot;</span>,</span><br><span class="javascript">              checked: <span class="hljs-literal">false</span>,</span><br>            &#125;,<br>          ],<br>        &#125;,<br>        methods: &#123;<br><span class="javascript">          <span class="hljs-function"><span class="hljs-title">handleParentFruitChange</span>(<span class="hljs-params">id</span>)</span> &#123;</span><br><span class="javascript">            <span class="hljs-keyword">let</span> fruits = <span class="hljs-built_in">this</span>.fruits;</span><br><span class="javascript">            <span class="hljs-keyword">let</span> idx = <span class="hljs-built_in">this</span>.fruits.findIndex(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;</span><br><span class="javascript">              <span class="hljs-keyword">return</span> item.id === id;</span><br>            &#125;);<br>            fruits[idx].checked = !fruits[idx].checked;<br><span class="javascript">            <span class="hljs-built_in">this</span>.fruits = fruits;</span><br>          &#125;,<br><span class="javascript">          <span class="hljs-function"><span class="hljs-title">handleParentAddFruit</span>(<span class="hljs-params">fruit</span>)</span> &#123;</span><br><span class="javascript">            <span class="hljs-built_in">this</span>.fruits = [...this.fruits, ...[fruit]];</span><br>          &#125;,<br>        &#125;,<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h3>]]></content>
    
    
    <categories>
      
      <category>框架</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>Html</tag>
      
      <tag>css</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
