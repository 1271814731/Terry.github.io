<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>vue</title>
    <link href="/Terry.github.io/2021/04/26/vue/"/>
    <url>/Terry.github.io/2021/04/26/vue/</url>
    
    <content type="html"><![CDATA[<h3 id="安装要使用的包"><a href="#安装要使用的包" class="headerlink" title="安装要使用的包"></a>安装要使用的包</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">npm install webpack webpack-cli -S<br>或<br>yarn add webpack webpack-cli -s<br></code></pre></div></td></tr></table></figure><hr><h3 id="如果使用全局-cli-命令，可以全局安装-webpack-cli"><a href="#如果使用全局-cli-命令，可以全局安装-webpack-cli" class="headerlink" title="如果使用全局 cli 命令，可以全局安装 webpack-cli"></a>如果使用全局 cli 命令，可以全局安装 webpack-cli</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">npm install webpack-cli -g<br>    或<br>yarn add <span class="hljs-built_in">global</span> webpack-cli<br></code></pre></div></td></tr></table></figure><hr><h3 id="在项目的根目录创建-webpack-config-js"><a href="#在项目的根目录创建-webpack-config-js" class="headerlink" title="在项目的根目录创建 webpack.config.js"></a>在项目的根目录创建 webpack.config.js</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;path&quot;</span>);<br><span class="hljs-built_in">module</span>.exports = &#123;<br>  entry: <span class="hljs-string">&quot;./src/index.js&quot;</span>, <span class="hljs-comment">// String || Object 可以写单个或者多个入口文件</span><br>  output: &#123;<br>    <span class="hljs-comment">// 出口</span><br>    path: path.resolve(__dirname, <span class="hljs-string">&quot;dist&quot;</span>),<br>    filename: <span class="hljs-string">&quot;[name][hash:8].js&quot;</span>,<br>  &#125;,<br>&#125;;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Html</tag>
      
      <tag>css</tag>
      
      <tag>vue</tag>
      
      <tag>webpack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>webpack</title>
    <link href="/Terry.github.io/2020/04/26/webpack/"/>
    <url>/Terry.github.io/2020/04/26/webpack/</url>
    
    <content type="html"><![CDATA[<h2 id="安装要使用的包"><a href="#安装要使用的包" class="headerlink" title="安装要使用的包"></a>安装要使用的包</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">npm install webpack webpack-cli -s<br>  或<br>yarn add webpack webpack-cli -s<br></code></pre></div></td></tr></table></figure><hr><h2 id="如果使用全局-cli-命令，可以全局安装-webpack-cli"><a href="#如果使用全局-cli-命令，可以全局安装-webpack-cli" class="headerlink" title="如果使用全局 cli 命令，可以全局安装 webpack-cli"></a>如果使用全局 cli 命令，可以全局安装 webpack-cli</h2><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">npm install webpack-cli -g<br>    或<br>yarn add <span class="hljs-built_in">global</span> webpack-cli<br></code></pre></div></td></tr></table></figure><hr><h2 id="配置文件创建"><a href="#配置文件创建" class="headerlink" title="配置文件创建"></a>配置文件创建</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>   在项目根目录创建：webpack.config.js</p><p>   <font color=red bgcolor=red size=4>entry–&gt;</font>文件入口；<br>   <font color=red size=4>output–&gt;</font></span>文件出口；<br>   <font color=red size=4>module–&gt;</font></span>模块依赖；<br>   <font color=red size=4>plugin–&gt;</font></span>插件配置；</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;path&quot;</span>);<br><span class="hljs-built_in">module</span>.exports = &#123;<br>  entry: <span class="hljs-string">&quot;./src/index.js&quot;</span>, <span class="hljs-comment">// String || Object 可以写单个或者多个入口文件</span><br>  output: &#123;<br>    <span class="hljs-comment">// 出口</span><br>    path: path.resolve(__dirname, <span class="hljs-string">&quot;dist&quot;</span>),<br>    filename: <span class="hljs-string">&quot;[name][hash:8].js&quot;</span>,<br>  &#125;,<br>  <span class="hljs-built_in">module</span>： &#123;&#125;,<br>  plugin: []<br>&#125;;<br></code></pre></div></td></tr></table></figure><h3 id="命令行配置"><a href="#命令行配置" class="headerlink" title="命令行配置"></a>命令行配置</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-comment">// package.json</span><br><span class="hljs-comment">// 使用命令</span><br><span class="hljs-comment">// npm server || npm build</span><br><span class="hljs-comment">// yarn server || yarn build</span><br><span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br>  <span class="hljs-string">&quot;server&quot;</span>: <span class="hljs-string">&quot;webpack-dev-server&quot;</span>, <span class="hljs-comment">//开发环境 热更新</span><br>  <span class="hljs-string">&quot;build&quot;</span>: <span class="hljs-string">&quot;webpack&quot;</span> <span class="hljs-comment">// 生产环境 打包 </span><br>&#125;,<br></code></pre></div></td></tr></table></figure><h2 id="ES6转ES5"><a href="#ES6转ES5" class="headerlink" title="ES6转ES5"></a>ES6转ES5</h2><h3 id="ES6转ES5-module-babel-loader-babel-core-babel-preset-env"><a href="#ES6转ES5-module-babel-loader-babel-core-babel-preset-env" class="headerlink" title="ES6转ES5 (module: babel-loader,@babel/core,@babel/preset-env)"></a>ES6转ES5 (module: babel-loader,@babel/core,@babel/preset-env)</h3><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">command:<br>  npm install babel-loader @babel/core @babel/preset-env -D<br>    或<br>  yarn add babel-loader @babel/core @babel/preset-env -D<br><br>code:<br>  <span class="hljs-built_in">module</span>: &#123;<br>    rules: [<br>      &#123;<br>        test: <span class="hljs-regexp">/\.js$/</span>,   <span class="hljs-comment">// 匹配 .js后缀的文件</span><br>        use: <span class="hljs-string">&quot;babel-loader&quot;</span>, <span class="hljs-comment">// 使用babel-loader</span><br>        exclude: <span class="hljs-regexp">/node_modules/</span>,  <span class="hljs-comment">// 排除node_modules中的js文件</span><br>      &#125;<br>    ] <br>  &#125;<br></code></pre></div></td></tr></table></figure><h3 id="在项目根目录-与webpack-config-js同级-创建文件-babelrc"><a href="#在项目根目录-与webpack-config-js同级-创建文件-babelrc" class="headerlink" title="在项目根目录(与webpack.config.js同级)创建文件 .babelrc"></a>在项目根目录(与webpack.config.js同级)创建文件 .babelrc</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&#123;<br>  <span class="hljs-string">&quot;presets&quot;</span>: [[<span class="hljs-string">&quot;@babel/preset-env&quot;</span>]],<br>  <span class="hljs-string">&quot;plugins&quot;</span>: []<br>&#125;<br><br></code></pre></div></td></tr></table></figure><hr><h2 id="css打包处理"><a href="#css打包处理" class="headerlink" title="css打包处理"></a>css打包处理</h2><h3 id="loader"><a href="#loader" class="headerlink" title="loader:"></a>loader:</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">command:<br>  npm install style-loader css-loader -D<br>    或<br>  yarn add style-loader css-loader -D<br>code:<br>  <span class="hljs-built_in">module</span>: &#123;<br>    rules: [<br>      &#123;<br>        test: <span class="hljs-regexp">/\.css$/</span>,<br>        use: [<span class="hljs-string">&quot;style-loader&quot;</span>, <span class="hljs-string">&quot;css-loader&quot;</span>],<br>      &#125;,<br>    ] <br>  &#125;<br></code></pre></div></td></tr></table></figure><h3 id="less处理"><a href="#less处理" class="headerlink" title="less处理"></a>less处理</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">command:<br>  npm install less-loader -D<br>    或<br>  yarn add less-loader -D<br>code:<br>  <span class="hljs-built_in">module</span>: &#123;<br>    rules: [<br>      &#123;<br>        test: <span class="hljs-regexp">/\.less$/</span>,<br>        use: [<span class="hljs-string">&quot;style-loader&quot;</span>, <span class="hljs-string">&quot;css-loader&quot;</span>,<span class="hljs-string">&quot;less-loader&quot;</span>],<br>      &#125;,<br>    ] <br>  &#125;  <br></code></pre></div></td></tr></table></figure><h3 id="sass处理"><a href="#sass处理" class="headerlink" title="sass处理"></a>sass处理</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">command:<br>  npm install sass-loader node-sass -D<br>    或<br>  yarn add sass-loader node-sass -D<br>code:<br>  <span class="hljs-built_in">module</span>: &#123;<br>    rules: [<br>      &#123;<br>        test: <span class="hljs-regexp">/\.less$/</span>,<br>        use: [<span class="hljs-string">&quot;style-loader&quot;</span>, <span class="hljs-string">&quot;css-loader&quot;</span>,<span class="hljs-string">&quot;sass-loader&quot;</span>],<br>      &#125;,<br>    ] <br>  &#125;  <br></code></pre></div></td></tr></table></figure><h3 id="处理后产生的问题"><a href="#处理后产生的问题" class="headerlink" title="处理后产生的问题"></a>处理后产生的问题</h3><p>打包后,由于css文件是以字符串的形式存在于打包后的js文件中,当网络不畅时/或打出的包文件过大的时候,页面的样式不会一下子加载出来,导致页面只渲染出了dom结构,没有渲染出样式.</p><p>解决方法：</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">npm install mini-css-extract-plugin -D<br>  或<br>yarn add mini-css-extract-plugin -D<br></code></pre></div></td></tr></table></figure><p>使用方式：</p><p>  webpack.config.js头部引入当前包</p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">const</span> MiniCssExtractPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mini-css-extract-plugin&quot;</span>);<br><span class="hljs-comment">// 修改 module -&gt; rules -&gt; /\.css$/ 中的 use</span><br><span class="hljs-built_in">module</span>: &#123;<br>  rules: [<br>    &#123;<br>      test: <span class="hljs-regexp">/\.css$/</span>,<br>      use: [MiniCssExtractPlugin.loader, <span class="hljs-string">&quot;css-loader&quot;</span>],  <span class="hljs-comment">// 使用MiniCssExtractPlugin的loader</span><br>    &#125;<br>  ]<br>&#125;<br><span class="hljs-comment">// plugin配置</span><br>  plugin: [<br>    <span class="hljs-keyword">new</span> MiniCssExtractPlugin(&#123;<br>      filename:<span class="hljs-string">&quot;style.css&quot;</span>   <span class="hljs-comment">// 重命名</span><br>    &#125;)<br>  ]<br></code></pre></div></td></tr></table></figure><h2 id="图片打包处理"><a href="#图片打包处理" class="headerlink" title="图片打包处理"></a>图片打包处理</h2><h3 id="使用的包"><a href="#使用的包" class="headerlink" title="使用的包"></a>使用的包</h3><font color=red>  这里推荐使用<font color=pink>url-loader</font>,因为<font color=pink>url-loader</font>封装了<font color=pink>file-loader</font>,当图片大小小于options中的limit参数时,会把图片数据转换成base64字符串,如果大于limit参数时,使用file-loader加载图片</font><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">npm install url-loader -D<br>  或者<br>yarn add url-loader -D<br></code></pre></div></td></tr></table></figure><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-built_in">module</span>: &#123;<br>  rules: [<br>    &#123;<br>      test: <span class="hljs-regexp">/\.(png|jpg|jpeg)$/</span>,<br>      use:&#123;<br>        loader: <span class="hljs-string">&quot;url-loader&quot;</span>,<br>        options: &#123;<br>          limit: <span class="hljs-number">4096</span> <span class="hljs-comment">// 图片大小上限4kb</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
